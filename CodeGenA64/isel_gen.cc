// NOTE: this file is PARTIALLY autogenerated via: ./isel_tab.py gen_c
// (c) Robert Muth - see LICENSE for more info

#include "CodeGenA64/isel_gen.h"
#include "Base/opcode_gen.h"

#include <cstdint>

namespace cwerg::code_gen_a64 {
namespace {
using namespace cwerg;
using namespace cwerg::base;

// +-prefix converts an enum the underlying integer type
template <typename T>
constexpr auto operator+(T e) noexcept
    -> std::enable_if_t<std::is_enum<T>::value, std::underlying_type_t<T>> {
  return static_cast<std::underlying_type_t<T>>(e);
}

using IC = IMM_CURB;

bool ImmStackFits(int64_t x,
                  bool assume_stk_op_matches,
                  unsigned bits,
                  unsigned scale_log) {
  if (assume_stk_op_matches) return true;
  if (x < 0) return false;
  if (x >= 1U << (bits + scale_log)) return false;
  return (x & ((1U << scale_log) - 1)) == 0;
}

bool ImmFitsCurb(IMM_CURB constr,
                 int64_t x,
                 int32_t last_stack_offset,
                 bool assume_stk_op_matches) {
  switch (constr) {
    case IC::INVALID:
      ASSERT(false, "unexpected IMM_CURB " << EnumToString(constr));
      return false;
    case IC::ZERO:
      return x == 0;
    case IC::ANY:
      return true;
    case IC::pos_stk_combo_16_bits:
      return ImmStackFits(x + last_stack_offset, assume_stk_op_matches, 16, 0);
    case IC::pos_stk_combo_32_bits:
      return ImmStackFits(x + last_stack_offset, assume_stk_op_matches, 32, 0);
    case IC::pos_stk_combo_10_21:
      return ImmStackFits(x + last_stack_offset, assume_stk_op_matches, 12, 0);
    case IC::pos_stk_combo_10_21_times_2:
      return ImmStackFits(x + last_stack_offset, assume_stk_op_matches, 12, 1);
    case IC::pos_stk_combo_10_21_times_4:
      return ImmStackFits(x + last_stack_offset, assume_stk_op_matches, 12, 2);
    case IC::pos_stk_combo_10_21_times_8:
      return ImmStackFits(x + last_stack_offset, assume_stk_op_matches, 12, 3);
    case IC::pos_stk_combo_shifted_10_21_22:
      if (assume_stk_op_matches) return true;
      x += last_stack_offset;
      // fall through
    case IC::IMM_SHIFTED_10_21_22:
      return a64::EncodeOperand(a64::OK::IMM_SHIFTED_10_21_22, x) !=
             a64::kEncodeFailure;
    case IC::IMM_10_15_16_22_W:
      return a64::Encode_10_15_16_22_W(x) != a64::kEncodeFailure;
    case IC::IMM_10_15_16_22_X:
      return a64::Encode_10_15_16_22_X(x) != a64::kEncodeFailure;
    case IC::IMM_SHIFTED_5_20_21_22:
      return a64::EncodeOperand(a64::OK::IMM_SHIFTED_5_20_21_22, x) !=
             a64::kEncodeFailure;
    case IC::IMM_SHIFTED_5_20_21_22_NOT:
      return a64::EncodeOperand(a64::OK::IMM_SHIFTED_5_20_21_22, ~x) !=
             a64::kEncodeFailure;
    case IC::IMM_POS_32:
      return 0 <= x && x < (1ULL << 32ULL);
  }
  ASSERT(false, "unexpected IMM_CURB " << EnumToString(constr));
  return false;
}

uint64_t ExtractTypeMaskForPattern(Ins ins) {
  uint64_t reg_matcher = 0;
  unsigned num_ops = InsOpcode(ins).num_operands;
  for (unsigned i = 0; i < num_ops; ++i) {
    const Handle h = InsOperand(ins, i);
    if (h.kind() == RefKind::REG) {
      reg_matcher |= uint64_t(RegKind(Reg(h))) << 8 * i;
    } else if (h.kind() == RefKind::CONST) {
      reg_matcher |= uint64_t(ConstKind(Const(h))) << 8 * i;
    }
  }
  return reg_matcher;
}

bool PatternMatchesTypeCurbs(const Pattern& pat, uint64_t type_mask) {
  return type_mask == *(uint64_t*)pat.type_curbs;
}

uint8_t PatternMismatchesImmCurbs(const Pattern& pat,
                                  Ins ins,
                                  bool assume_stk_op_matches) {
  unsigned num_ops = InsOpcode(ins).num_operands;
  uint8_t out = 0;
  // Should this be int64_t?
  int32_t last_stack_offset = 0;
  for (unsigned i = 0; i < num_ops; ++i) {
    const Const op(InsOperand(ins, i));
    const IC imm_curb = pat.imm_curbs[i];
    if (op.kind() == RefKind::STK) {
      if (assume_stk_op_matches) {
        last_stack_offset = 0;
      } else {
        last_stack_offset = StkSlot(Stk(op));
      }
    } else if (op.kind() == RefKind::REG) {
      if (imm_curb != IC::INVALID)
        return MATCH_IMPOSSIBLE;  // we have a reg but need an imm
    } else if (op.kind() == RefKind::CONST) {
      if (imm_curb == IC::INVALID) {
        // we have an imm but need a reg - this can be accommodated.
        out |= 1U << i;
      } else if (!ImmFitsCurb(imm_curb, ConstValueInt64(op), last_stack_offset,
                              assume_stk_op_matches)) {
        // imm does not not fit
        return MATCH_IMPOSSIBLE;
      }
    }
  }
  return out;
}

/* @AUTOGEN-START@ */

enum class FIXARG : uint8_t {
    WZR = 31,
    X8 = 8,
    LR = 30,
    UXTW = 0,
    SXTW = 1,
};

enum class SHIFT : uint8_t {
    lsl = 0,
    lsr = 1,
    asr = 2,
    ror = 3,
};

const InsTmpl kInsTemplates[] = {
  { /*used first entry*/ },
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::add_w_reg, 0x7 },  // add [2]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::add_w_imm, 0x7 },  // add [3]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::add_w_reg, 0x7 },  // add [4]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::add_w_imm, 0x7 },  // add [5]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::add_x_reg, 0x7 },  // add [6]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::add_x_imm, 0x7 },  // add [7]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::add_x_reg, 0x7 },  // add [8]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::add_x_imm, 0x7 },  // add [9]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fadd_s, 0x7 },  // add [10]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fadd_d, 0x7 },  // add [11]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::sub_w_reg, 0x7 },  // sub [12]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::sub_w_imm, 0x7 },  // sub [13]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::sub_w_reg, 0x5 },  // sub [14]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::sub_w_reg, 0x7 },  // sub [15]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::sub_w_imm, 0x7 },  // sub [16]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::sub_w_reg, 0x5 },  // sub [17]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::sub_x_reg, 0x7 },  // sub [18]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::sub_x_imm, 0x7 },  // sub [19]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::sub_x_reg, 0x5 },  // sub [20]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::sub_x_reg, 0x7 },  // sub [21]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::sub_x_imm, 0x7 },  // sub [22]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::sub_x_reg, 0x5 },  // sub [23]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fsub_s, 0x7 },  // sub [24]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fsub_d, 0x7 },  // sub [25]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::WZR},
    a64::OPC::madd_w, 0x7 },  // mul [26]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::WZR},
    a64::OPC::madd_w, 0x7 },  // mul [27]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::WZR},
    a64::OPC::madd_x, 0x7 },  // mul [28]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::WZR},
    a64::OPC::madd_x, 0x7 },  // mul [29]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fmul_s, 0x7 },  // mul [30]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fmul_d, 0x7 },  // mul [31]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::udiv_w, 0x7 },  // div [32]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::sdiv_w, 0x7 },  // div [33]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::udiv_x, 0x7 },  // div [34]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::sdiv_x, 0x7 },  // div [35]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fdiv_s, 0x7 },  // div [36]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::fdiv_d, 0x7 },  // div [37]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::eor_w_reg, 0x7 },  // xor [38]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::eor_w_imm, 0x7 },  // xor [39]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::eor_w_reg, 0x7 },  // xor [40]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::eor_w_imm, 0x7 },  // xor [41]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // xor [42]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::eor_x_imm, 0x7 },  // xor [43]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::eor_x_reg, 0x7 },  // xor [44]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::eor_x_imm, 0x7 },  // xor [45]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::and_w_reg, 0x7 },  // and [46]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::and_w_imm, 0x7 },  // and [47]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::and_w_reg, 0x7 },  // and [48]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::and_w_imm, 0x7 },  // and [49]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::and_x_reg, 0x7 },  // and [50]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::and_x_imm, 0x7 },  // and [51]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::and_x_reg, 0x7 },  // and [52]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::and_x_imm, 0x7 },  // and [53]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::orr_w_reg, 0x7 },  // or [54]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::orr_w_imm, 0x7 },  // or [55]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::orr_w_reg, 0x7 },  // or [56]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::orr_w_imm, 0x7 },  // or [57]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x7 },  // or [58]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::orr_x_imm, 0x7 },  // or [59]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x7 },  // or [60]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2},
    a64::OPC::orr_x_imm, 0x7 },  // or [61]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::lslv_w, 0x7 },  // shl [62]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::lslv_w, 0x7 },  // shl [63]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::lslv_x, 0x7 },  // shl [64]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::lslv_x, 0x7 },  // shl [65]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2_rsb_width, +PARAM::num2_rsb_width_minus1},
    a64::OPC::ubfm_w, 0xf },  // shl [66]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2_rsb_width, +PARAM::num2_rsb_width_minus1},
    a64::OPC::ubfm_w, 0xf },  // shl [67]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2_rsb_width, +PARAM::num2_rsb_width_minus1},
    a64::OPC::ubfm_x, 0xf },  // shl [68]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2_rsb_width, +PARAM::num2_rsb_width_minus1},
    a64::OPC::ubfm_x, 0xf },  // shl [69]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::lsrv_w, 0x7 },  // shr [70]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::asrv_w, 0x7 },  // shr [71]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::lsrv_x, 0x7 },  // shr [72]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::asrv_x, 0x7 },  // shr [73]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2, 31},
    a64::OPC::ubfm_w, 0x7 },  // shr [74]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2, 31},
    a64::OPC::sbfm_w, 0x7 },  // shr [75]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2, 63},
    a64::OPC::ubfm_x, 0x7 },  // shr [76]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::num2, 63},
    a64::OPC::sbfm_x, 0x7 },  // shr [77]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // beq [78]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [79]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_w_imm, 0x6 },  // beq [80]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [81]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // beq [82]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [83]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_w_imm, 0x6 },  // beq [84]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [85]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // beq [86]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [87]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // beq [88]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [89]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // beq [90]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [91]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // beq [92]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [93]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // beq [94]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [95]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // beq [96]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [97]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // beq [98]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [99]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // beq [100]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [101]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcmpe_s, 0x3 },  // beq [102]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [103]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcmpe_d, 0x3 },  // beq [104]
  { {+PARAM::bbl2},
    a64::OPC::b_eq, 0x1 },  // beq [105]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // bne [106]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [107]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_w_imm, 0x6 },  // bne [108]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [109]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // bne [110]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [111]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_w_imm, 0x6 },  // bne [112]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [113]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // bne [114]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [115]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // bne [116]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [117]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // bne [118]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [119]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // bne [120]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [121]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // bne [122]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [123]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // bne [124]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [125]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // bne [126]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [127]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // bne [128]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [129]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcmpe_s, 0x3 },  // bne [130]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [131]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcmpe_d, 0x3 },  // bne [132]
  { {+PARAM::bbl2},
    a64::OPC::b_ne, 0x1 },  // bne [133]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // blt [134]
  { {+PARAM::bbl2},
    a64::OPC::b_cc, 0x1 },  // blt [135]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_w_imm, 0x6 },  // blt [136]
  { {+PARAM::bbl2},
    a64::OPC::b_cc, 0x1 },  // blt [137]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_w_imm, 0x6 },  // blt [138]
  { {+PARAM::bbl2},
    a64::OPC::b_hi, 0x1 },  // blt [139]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // blt [140]
  { {+PARAM::bbl2},
    a64::OPC::b_lt, 0x1 },  // blt [141]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_w_imm, 0x6 },  // blt [142]
  { {+PARAM::bbl2},
    a64::OPC::b_lt, 0x1 },  // blt [143]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_w_imm, 0x6 },  // blt [144]
  { {+PARAM::bbl2},
    a64::OPC::b_gt, 0x1 },  // blt [145]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // blt [146]
  { {+PARAM::bbl2},
    a64::OPC::b_cc, 0x1 },  // blt [147]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // blt [148]
  { {+PARAM::bbl2},
    a64::OPC::b_cc, 0x1 },  // blt [149]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_x_imm, 0x6 },  // blt [150]
  { {+PARAM::bbl2},
    a64::OPC::b_hi, 0x1 },  // blt [151]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // blt [152]
  { {+PARAM::bbl2},
    a64::OPC::b_cc, 0x1 },  // blt [153]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // blt [154]
  { {+PARAM::bbl2},
    a64::OPC::b_cc, 0x1 },  // blt [155]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_x_imm, 0x6 },  // blt [156]
  { {+PARAM::bbl2},
    a64::OPC::b_hi, 0x1 },  // blt [157]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // blt [158]
  { {+PARAM::bbl2},
    a64::OPC::b_cc, 0x1 },  // blt [159]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // blt [160]
  { {+PARAM::bbl2},
    a64::OPC::b_cc, 0x1 },  // blt [161]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_x_imm, 0x6 },  // blt [162]
  { {+PARAM::bbl2},
    a64::OPC::b_hi, 0x1 },  // blt [163]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // blt [164]
  { {+PARAM::bbl2},
    a64::OPC::b_cc, 0x1 },  // blt [165]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // blt [166]
  { {+PARAM::bbl2},
    a64::OPC::b_cc, 0x1 },  // blt [167]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_x_imm, 0x6 },  // blt [168]
  { {+PARAM::bbl2},
    a64::OPC::b_hi, 0x1 },  // blt [169]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcmpe_s, 0x3 },  // blt [170]
  { {+PARAM::bbl2},
    a64::OPC::b_mi, 0x1 },  // blt [171]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcmpe_d, 0x3 },  // blt [172]
  { {+PARAM::bbl2},
    a64::OPC::b_mi, 0x1 },  // blt [173]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // ble [174]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [175]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_w_imm, 0x6 },  // ble [176]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [177]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_w_imm, 0x6 },  // ble [178]
  { {+PARAM::bbl2},
    a64::OPC::b_cs, 0x1 },  // ble [179]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // ble [180]
  { {+PARAM::bbl2},
    a64::OPC::b_le, 0x1 },  // ble [181]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_w_imm, 0x6 },  // ble [182]
  { {+PARAM::bbl2},
    a64::OPC::b_le, 0x1 },  // ble [183]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_w_imm, 0x6 },  // ble [184]
  { {+PARAM::bbl2},
    a64::OPC::b_ge, 0x1 },  // ble [185]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // ble [186]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [187]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // ble [188]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [189]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_x_imm, 0x6 },  // ble [190]
  { {+PARAM::bbl2},
    a64::OPC::b_cs, 0x1 },  // ble [191]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // ble [192]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [193]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // ble [194]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [195]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_x_imm, 0x6 },  // ble [196]
  { {+PARAM::bbl2},
    a64::OPC::b_cs, 0x1 },  // ble [197]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // ble [198]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [199]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // ble [200]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [201]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_x_imm, 0x6 },  // ble [202]
  { {+PARAM::bbl2},
    a64::OPC::b_cs, 0x1 },  // ble [203]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // ble [204]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [205]
  { {+FIXARG::WZR, +PARAM::reg0, +PARAM::num1},
    a64::OPC::subs_x_imm, 0x6 },  // ble [206]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [207]
  { {+FIXARG::WZR, +PARAM::reg1, +PARAM::num0},
    a64::OPC::subs_x_imm, 0x6 },  // ble [208]
  { {+PARAM::bbl2},
    a64::OPC::b_cs, 0x1 },  // ble [209]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcmpe_s, 0x3 },  // ble [210]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [211]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcmpe_d, 0x3 },  // ble [212]
  { {+PARAM::bbl2},
    a64::OPC::b_ls, 0x1 },  // ble [213]
  { {+PARAM::scratch_gpr, +PARAM::jtb1_prel_hi21},
    a64::OPC::adrp, 0x3 },  // switch [214]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::jtb1_lo12},
    a64::OPC::add_x_imm, 0x7 },  // switch [215]
  { {+PARAM::scratch_gpr, +PARAM::scratch_gpr, +PARAM::reg0, +FIXARG::UXTW, 3},
    a64::OPC::ldr_x_reg_w, 0x7 },  // switch [216]
  { {+PARAM::scratch_gpr},
    a64::OPC::br, 0x1 },  // switch [217]
  { {+PARAM::bbl0},
    a64::OPC::b, 0x1 },  // bra [218]
  { {+PARAM::fun0},
    a64::OPC::bl, 0x1 },  // bsr [219]
  { {+PARAM::reg0},
    a64::OPC::blr, 0x1 },  // jsr [220]
  { {+FIXARG::X8, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x2 },  // syscall [221]
  { {0},
    a64::OPC::svc, 0x0 },  // syscall [222]
  { {0},
    a64::OPC::brk, 0x0 },  // trap [223]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [224]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [225]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [226]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [227]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [228]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [229]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [230]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [231]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [232]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [233]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [234]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [235]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [236]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [237]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [238]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [239]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [240]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [241]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [242]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [243]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [244]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [245]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [246]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [247]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [248]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [249]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [250]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [251]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [252]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [253]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [254]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [255]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [256]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [257]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [258]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [259]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [260]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [261]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [262]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // conv [263]
  { {+PARAM::reg0, +PARAM::reg1, 255},
    a64::OPC::and_x_imm, 0x3 },  // conv [264]
  { {+PARAM::reg0, +PARAM::reg1, 65535},
    a64::OPC::and_x_imm, 0x3 },  // conv [265]
  { {+PARAM::reg0, +PARAM::reg1, 255},
    a64::OPC::and_x_imm, 0x3 },  // conv [266]
  { {+PARAM::reg0, +PARAM::reg1, 65535},
    a64::OPC::and_x_imm, 0x3 },  // conv [267]
  { {+PARAM::reg0, +PARAM::reg1, 0, 31},
    a64::OPC::sbfm_x, 0x3 },  // conv [268]
  { {+PARAM::reg0, +PARAM::reg1, 0, 7},
    a64::OPC::sbfm_x, 0x3 },  // conv [269]
  { {+PARAM::reg0, +PARAM::reg1, 0, 15},
    a64::OPC::sbfm_x, 0x3 },  // conv [270]
  { {+PARAM::reg0, +PARAM::reg1, 0, 7},
    a64::OPC::sbfm_x, 0x3 },  // conv [271]
  { {+PARAM::reg0, +PARAM::reg1, 0, 15},
    a64::OPC::sbfm_x, 0x3 },  // conv [272]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_w_reg, 0x5 },  // conv [273]
  { {+PARAM::reg0, +PARAM::reg1, 0, 31},
    a64::OPC::sbfm_x, 0x3 },  // conv [274]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::scvtf_d_from_w, 0x3 },  // conv [275]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::ucvtf_d_from_w, 0x3 },  // conv [276]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::scvtf_s_from_w, 0x3 },  // conv [277]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::ucvtf_s_from_w, 0x3 },  // conv [278]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::scvtf_d_from_x, 0x3 },  // conv [279]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::ucvtf_d_from_x, 0x3 },  // conv [280]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::scvtf_s_from_x, 0x3 },  // conv [281]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::ucvtf_s_from_x, 0x3 },  // conv [282]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcvtzs_w_s, 0x3 },  // conv [283]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcvtzs_w_d, 0x3 },  // conv [284]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcvtzu_w_s, 0x3 },  // conv [285]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcvtzu_w_d, 0x3 },  // conv [286]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcvtzs_x_s, 0x3 },  // conv [287]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcvtzs_x_d, 0x3 },  // conv [288]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcvtzu_x_s, 0x3 },  // conv [289]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fcvtzu_x_d, 0x3 },  // conv [290]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [291]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [292]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [293]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [294]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [295]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [296]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [297]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [298]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [299]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [300]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [301]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [302]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [303]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [304]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [305]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [306]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [307]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [308]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [309]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // bitcast [310]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // mov [311]
  { {+PARAM::reg0, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x3 },  // mov [312]
  { {+PARAM::reg0, +PARAM::num1_not},
    a64::OPC::movn_x_imm, 0x3 },  // mov [313]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [314]
  { {+PARAM::reg0, +PARAM::num1_16_32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [315]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [316]
  { {+PARAM::reg0, +PARAM::num1_16_32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [317]
  { {+PARAM::reg0, +PARAM::num1_32_48},
    a64::OPC::movk_x_imm, 0x3 },  // mov [318]
  { {+PARAM::reg0, +PARAM::num1_48_64},
    a64::OPC::movk_x_imm, 0x3 },  // mov [319]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // mov [320]
  { {+PARAM::reg0, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x3 },  // mov [321]
  { {+PARAM::reg0, +PARAM::num1_not},
    a64::OPC::movn_x_imm, 0x3 },  // mov [322]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [323]
  { {+PARAM::reg0, +PARAM::num1_16_32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [324]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [325]
  { {+PARAM::reg0, +PARAM::num1_16_32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [326]
  { {+PARAM::reg0, +PARAM::num1_32_48},
    a64::OPC::movk_x_imm, 0x3 },  // mov [327]
  { {+PARAM::reg0, +PARAM::num1_48_64},
    a64::OPC::movk_x_imm, 0x3 },  // mov [328]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // mov [329]
  { {+PARAM::reg0, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x3 },  // mov [330]
  { {+PARAM::reg0, +PARAM::num1_not},
    a64::OPC::movn_x_imm, 0x3 },  // mov [331]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [332]
  { {+PARAM::reg0, +PARAM::num1_16_32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [333]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [334]
  { {+PARAM::reg0, +PARAM::num1_16_32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [335]
  { {+PARAM::reg0, +PARAM::num1_32_48},
    a64::OPC::movk_x_imm, 0x3 },  // mov [336]
  { {+PARAM::reg0, +PARAM::num1_48_64},
    a64::OPC::movk_x_imm, 0x3 },  // mov [337]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // mov [338]
  { {+PARAM::reg0, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x3 },  // mov [339]
  { {+PARAM::reg0, +PARAM::num1_not},
    a64::OPC::movn_x_imm, 0x3 },  // mov [340]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [341]
  { {+PARAM::reg0, +PARAM::num1_16_32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [342]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [343]
  { {+PARAM::reg0, +PARAM::num1_16_32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [344]
  { {+PARAM::reg0, +PARAM::num1_32_48},
    a64::OPC::movk_x_imm, 0x3 },  // mov [345]
  { {+PARAM::reg0, +PARAM::num1_48_64},
    a64::OPC::movk_x_imm, 0x3 },  // mov [346]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // mov [347]
  { {+PARAM::reg0, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x3 },  // mov [348]
  { {+PARAM::reg0, +PARAM::num1_not},
    a64::OPC::movn_x_imm, 0x3 },  // mov [349]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [350]
  { {+PARAM::reg0, +PARAM::num1_16_32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [351]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [352]
  { {+PARAM::reg0, +PARAM::num1_16_32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [353]
  { {+PARAM::reg0, +PARAM::num1_32_48},
    a64::OPC::movk_x_imm, 0x3 },  // mov [354]
  { {+PARAM::reg0, +PARAM::num1_48_64},
    a64::OPC::movk_x_imm, 0x3 },  // mov [355]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // mov [356]
  { {+PARAM::reg0, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x3 },  // mov [357]
  { {+PARAM::reg0, +PARAM::num1_not},
    a64::OPC::movn_x_imm, 0x3 },  // mov [358]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [359]
  { {+PARAM::reg0, +PARAM::num1_16_32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [360]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [361]
  { {+PARAM::reg0, +PARAM::num1_16_32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [362]
  { {+PARAM::reg0, +PARAM::num1_32_48},
    a64::OPC::movk_x_imm, 0x3 },  // mov [363]
  { {+PARAM::reg0, +PARAM::num1_48_64},
    a64::OPC::movk_x_imm, 0x3 },  // mov [364]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // mov [365]
  { {+PARAM::reg0, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x3 },  // mov [366]
  { {+PARAM::reg0, +PARAM::num1_not},
    a64::OPC::movn_x_imm, 0x3 },  // mov [367]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [368]
  { {+PARAM::reg0, +PARAM::num1_16_32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [369]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [370]
  { {+PARAM::reg0, +PARAM::num1_16_32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [371]
  { {+PARAM::reg0, +PARAM::num1_32_48},
    a64::OPC::movk_x_imm, 0x3 },  // mov [372]
  { {+PARAM::reg0, +PARAM::num1_48_64},
    a64::OPC::movk_x_imm, 0x3 },  // mov [373]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // mov [374]
  { {+PARAM::reg0, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x3 },  // mov [375]
  { {+PARAM::reg0, +PARAM::num1_not},
    a64::OPC::movn_x_imm, 0x3 },  // mov [376]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [377]
  { {+PARAM::reg0, +PARAM::num1_16_32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [378]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [379]
  { {+PARAM::reg0, +PARAM::num1_16_32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [380]
  { {+PARAM::reg0, +PARAM::num1_32_48},
    a64::OPC::movk_x_imm, 0x3 },  // mov [381]
  { {+PARAM::reg0, +PARAM::num1_48_64},
    a64::OPC::movk_x_imm, 0x3 },  // mov [382]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // mov [383]
  { {+PARAM::reg0, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x3 },  // mov [384]
  { {+PARAM::reg0, +PARAM::num1_not},
    a64::OPC::movn_x_imm, 0x3 },  // mov [385]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [386]
  { {+PARAM::reg0, +PARAM::num1_16_32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [387]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [388]
  { {+PARAM::reg0, +PARAM::num1_16_32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [389]
  { {+PARAM::reg0, +PARAM::num1_32_48},
    a64::OPC::movk_x_imm, 0x3 },  // mov [390]
  { {+PARAM::reg0, +PARAM::num1_48_64},
    a64::OPC::movk_x_imm, 0x3 },  // mov [391]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg1, +SHIFT::lsl, 0},
    a64::OPC::orr_x_reg, 0x5 },  // mov [392]
  { {+PARAM::reg0, +PARAM::num1},
    a64::OPC::movz_x_imm, 0x3 },  // mov [393]
  { {+PARAM::reg0, +PARAM::num1_not},
    a64::OPC::movn_x_imm, 0x3 },  // mov [394]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [395]
  { {+PARAM::reg0, +PARAM::num1_16_32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [396]
  { {+PARAM::reg0, +PARAM::num1_0_16},
    a64::OPC::movz_x_imm, 0x3 },  // mov [397]
  { {+PARAM::reg0, +PARAM::num1_16_32},
    a64::OPC::movk_x_imm, 0x3 },  // mov [398]
  { {+PARAM::reg0, +PARAM::num1_32_48},
    a64::OPC::movk_x_imm, 0x3 },  // mov [399]
  { {+PARAM::reg0, +PARAM::num1_48_64},
    a64::OPC::movk_x_imm, 0x3 },  // mov [400]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fmov_s_reg, 0x3 },  // mov [401]
  { {+PARAM::reg0, +PARAM::reg1},
    a64::OPC::fmov_d_reg, 0x3 },  // mov [402]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [403]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [404]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [405]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [406]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [407]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [408]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [409]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [410]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [411]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [412]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [413]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [414]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [415]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [416]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [417]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [418]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [419]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [420]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [421]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [422]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [423]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [424]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [425]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [426]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [427]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [428]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [429]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [430]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [431]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [432]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [433]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [434]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [435]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [436]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [437]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [438]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [439]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [440]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [441]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [442]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [443]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [444]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [445]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [446]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [447]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [448]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [449]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [450]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [451]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [452]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [453]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [454]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [455]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [456]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [457]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [458]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [459]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [460]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [461]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [462]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [463]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [464]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [465]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [466]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [467]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [468]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [469]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [470]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [471]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [472]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [473]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [474]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [475]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [476]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [477]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [478]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [479]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [480]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [481]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [482]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [483]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [484]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [485]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [486]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [487]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [488]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [489]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [490]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [491]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [492]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [493]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [494]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [495]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [496]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [497]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [498]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [499]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [500]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [501]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [502]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [503]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [504]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [505]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [506]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [507]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [508]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [509]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [510]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [511]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [512]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [513]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [514]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [515]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [516]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [517]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [518]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [519]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [520]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [521]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [522]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [523]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [524]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [525]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [526]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmpeq [527]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [528]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [529]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [530]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [531]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [532]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [533]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [534]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [535]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [536]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [537]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [538]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [539]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [540]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [541]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [542]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmpeq [543]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [544]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [545]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [546]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [547]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [548]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [549]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [550]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [551]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmpeq [552]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [553]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_ge, 0x7 },  // cmpeq [554]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [555]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [556]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [557]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [558]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [559]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmpeq [560]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [561]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_ge, 0x7 },  // cmpeq [562]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [563]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [564]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [565]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [566]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [567]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmpeq [568]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [569]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_ge, 0x7 },  // cmpeq [570]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [571]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [572]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [573]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [574]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [575]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmpeq [576]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [577]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_ge, 0x7 },  // cmpeq [578]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [579]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmpeq [580]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [581]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cs, 0x7 },  // cmpeq [582]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [583]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_lt, 0x7 },  // cmpeq [584]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [585]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_ge, 0x7 },  // cmpeq [586]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [587]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmpeq [588]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [589]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cs, 0x7 },  // cmpeq [590]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [591]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_lt, 0x7 },  // cmpeq [592]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_w_imm, 0x6 },  // cmpeq [593]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_ge, 0x7 },  // cmpeq [594]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [595]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [596]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [597]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [598]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [599]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [600]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [601]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [602]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [603]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmpeq [604]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [605]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_ge, 0x7 },  // cmpeq [606]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [607]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [608]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [609]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [610]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [611]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [612]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [613]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [614]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [615]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmpeq [616]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [617]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_ge, 0x7 },  // cmpeq [618]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [619]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [620]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [621]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [622]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [623]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [624]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [625]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [626]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [627]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmpeq [628]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [629]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_ge, 0x7 },  // cmpeq [630]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [631]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [632]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [633]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [634]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [635]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmpeq [636]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [637]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cs, 0x7 },  // cmpeq [638]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [639]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmpeq [640]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [641]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_ge, 0x7 },  // cmpeq [642]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [643]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmpeq [644]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [645]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cs, 0x7 },  // cmpeq [646]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [647]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmpeq [648]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [649]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cs, 0x7 },  // cmpeq [650]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [651]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_lt, 0x7 },  // cmpeq [652]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [653]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_ge, 0x7 },  // cmpeq [654]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [655]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmpeq [656]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [657]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cs, 0x7 },  // cmpeq [658]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [659]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmpeq [660]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [661]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cs, 0x7 },  // cmpeq [662]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::num4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [663]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_lt, 0x7 },  // cmpeq [664]
  { {+FIXARG::WZR, +PARAM::num3, +PARAM::reg4},
    a64::OPC::subs_x_imm, 0x6 },  // cmpeq [665]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_ge, 0x7 },  // cmpeq [666]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmpeq [667]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [668]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmpeq [669]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [670]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmpeq [671]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [672]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmpeq [673]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_eq, 0x7 },  // cmpeq [674]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmpeq [675]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [676]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmpeq [677]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [678]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmpeq [679]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [680]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmpeq [681]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [682]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmpeq [683]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [684]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmpeq [685]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [686]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmpeq [687]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [688]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmpeq [689]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_eq, 0x7 },  // cmpeq [690]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [691]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [692]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [693]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmplt [694]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [695]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [696]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [697]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmplt [698]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [699]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [700]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [701]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmplt [702]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [703]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [704]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [705]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmplt [706]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [707]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmplt [708]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [709]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_lt, 0x7 },  // cmplt [710]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [711]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmplt [712]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_w_reg, 0x6 },  // cmplt [713]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_lt, 0x7 },  // cmplt [714]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [715]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [716]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [717]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [718]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [719]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmplt [720]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [721]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [722]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [723]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [724]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [725]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmplt [726]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [727]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [728]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [729]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [730]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [731]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmplt [732]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [733]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [734]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [735]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_cc, 0x7 },  // cmplt [736]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [737]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_lt, 0x7 },  // cmplt [738]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [739]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmplt [740]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [741]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmplt [742]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [743]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_lt, 0x7 },  // cmplt [744]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [745]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmplt [746]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [747]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_cc, 0x7 },  // cmplt [748]
  { {+FIXARG::WZR, +PARAM::reg3, +PARAM::reg4, +SHIFT::lsl, 0},
    a64::OPC::subs_x_reg, 0x6 },  // cmplt [749]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_lt, 0x7 },  // cmplt [750]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmplt [751]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_mi, 0x7 },  // cmplt [752]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmplt [753]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_mi, 0x7 },  // cmplt [754]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmplt [755]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_mi, 0x7 },  // cmplt [756]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmplt [757]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_w_mi, 0x7 },  // cmplt [758]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmplt [759]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_mi, 0x7 },  // cmplt [760]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmplt [761]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_mi, 0x7 },  // cmplt [762]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmplt [763]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_mi, 0x7 },  // cmplt [764]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmplt [765]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_mi, 0x7 },  // cmplt [766]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmplt [767]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_mi, 0x7 },  // cmplt [768]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmplt [769]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_mi, 0x7 },  // cmplt [770]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_s, 0x3 },  // cmplt [771]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_mi, 0x7 },  // cmplt [772]
  { {+PARAM::reg3, +PARAM::reg4},
    a64::OPC::fcmp_d, 0x3 },  // cmplt [773]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2},
    a64::OPC::csel_x_mi, 0x7 },  // cmplt [774]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::add_x_reg, 0x7 },  // lea [775]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::add_x_reg, 0x7 },  // lea [776]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, 0},
    a64::OPC::add_x_reg_uxtw, 0x7 },  // lea [777]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, 0},
    a64::OPC::add_x_reg_sxtw, 0x7 },  // lea [778]
  { {+PARAM::reg0, +PARAM::mem1_num2_prel_hi21},
    a64::OPC::adrp, 0x3 },  // lea.mem [779]
  { {+PARAM::reg0, +PARAM::reg0, +PARAM::mem1_num2_lo12},
    a64::OPC::add_x_imm, 0x7 },  // lea.mem [780]
  { {+PARAM::reg0, +PARAM::mem1_num2_prel_hi21},
    a64::OPC::adrp, 0x3 },  // lea.mem [781]
  { {+PARAM::reg0, +PARAM::reg0, +PARAM::mem1_num2_lo12},
    a64::OPC::add_x_imm, 0x7 },  // lea.mem [782]
  { {+PARAM::reg0, +PARAM::mem1_num2_prel_hi21},
    a64::OPC::adrp, 0x3 },  // lea.mem [783]
  { {+PARAM::reg0, +PARAM::reg0, +PARAM::mem1_num2_lo12},
    a64::OPC::add_x_imm, 0x7 },  // lea.mem [784]
  { {+PARAM::reg0, +PARAM::mem1_num2_prel_hi21},
    a64::OPC::adrp, 0x3 },  // lea.mem [785]
  { {+PARAM::reg0, +PARAM::reg0, +PARAM::mem1_num2_lo12},
    a64::OPC::add_x_imm, 0x7 },  // lea.mem [786]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::add_x_imm, 0x5 },  // lea.stk [787]
  { {+PARAM::reg0, +PARAM::stk1_offset2},
    a64::OPC::movz_x_imm, 0x3 },  // lea.stk [788]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, +SHIFT::lsl, 0},
    a64::OPC::add_x_reg, 0x5 },  // lea.stk [789]
  { {+PARAM::reg0, +PARAM::stk1_offset2_lo},
    a64::OPC::movz_x_imm, 0x3 },  // lea.stk [790]
  { {+PARAM::reg0, +PARAM::stk1_offset2_hi},
    a64::OPC::movk_x_imm, 0x3 },  // lea.stk [791]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, +SHIFT::lsl, 0},
    a64::OPC::add_x_reg, 0x5 },  // lea.stk [792]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::add_x_imm, 0x5 },  // lea.stk [793]
  { {+PARAM::reg0, +PARAM::stk1_offset2},
    a64::OPC::movz_x_imm, 0x3 },  // lea.stk [794]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, +SHIFT::lsl, 0},
    a64::OPC::add_x_reg, 0x5 },  // lea.stk [795]
  { {+PARAM::reg0, +PARAM::stk1_offset2_lo},
    a64::OPC::movz_x_imm, 0x3 },  // lea.stk [796]
  { {+PARAM::reg0, +PARAM::stk1_offset2_hi},
    a64::OPC::movk_x_imm, 0x3 },  // lea.stk [797]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, +SHIFT::lsl, 0},
    a64::OPC::add_x_reg, 0x5 },  // lea.stk [798]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::add_x_imm, 0x5 },  // lea.stk [799]
  { {+PARAM::reg0, +PARAM::stk1_offset2},
    a64::OPC::movz_x_imm, 0x3 },  // lea.stk [800]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, +SHIFT::lsl, 0},
    a64::OPC::add_x_reg, 0x5 },  // lea.stk [801]
  { {+PARAM::reg0, +PARAM::stk1_offset2_lo},
    a64::OPC::movz_x_imm, 0x3 },  // lea.stk [802]
  { {+PARAM::reg0, +PARAM::stk1_offset2_hi},
    a64::OPC::movk_x_imm, 0x3 },  // lea.stk [803]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, +SHIFT::lsl, 0},
    a64::OPC::add_x_reg, 0x5 },  // lea.stk [804]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::add_x_imm, 0x5 },  // lea.stk [805]
  { {+PARAM::reg0, +PARAM::stk1_offset2},
    a64::OPC::movz_x_imm, 0x3 },  // lea.stk [806]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, +SHIFT::lsl, 0},
    a64::OPC::add_x_reg, 0x5 },  // lea.stk [807]
  { {+PARAM::reg0, +PARAM::stk1_offset2_lo},
    a64::OPC::movz_x_imm, 0x3 },  // lea.stk [808]
  { {+PARAM::reg0, +PARAM::stk1_offset2_hi},
    a64::OPC::movk_x_imm, 0x3 },  // lea.stk [809]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::reg0, +SHIFT::lsl, 0},
    a64::OPC::add_x_reg, 0x5 },  // lea.stk [810]
  { {+PARAM::reg0, +PARAM::fun1_prel_hi21},
    a64::OPC::adrp, 0x3 },  // lea.fun [811]
  { {+PARAM::reg0, +PARAM::reg0, +PARAM::fun1_lo12},
    a64::OPC::add_x_imm, 0x7 },  // lea.fun [812]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_x_reg_x, 0x7 },  // ld [813]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_x_reg_x, 0x7 },  // ld [814]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::ldr_x_reg_w, 0x7 },  // ld [815]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::ldr_x_reg_w, 0x7 },  // ld [816]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_x_reg_x, 0x7 },  // ld [817]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_x_reg_x, 0x7 },  // ld [818]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::ldr_x_reg_w, 0x7 },  // ld [819]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::ldr_x_reg_w, 0x7 },  // ld [820]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_x_reg_x, 0x7 },  // ld [821]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_x_reg_x, 0x7 },  // ld [822]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::ldr_x_reg_w, 0x7 },  // ld [823]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::ldr_x_reg_w, 0x7 },  // ld [824]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_x_reg_x, 0x7 },  // ld [825]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_x_reg_x, 0x7 },  // ld [826]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::ldr_x_reg_w, 0x7 },  // ld [827]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::ldr_x_reg_w, 0x7 },  // ld [828]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_w_reg_x, 0x7 },  // ld [829]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_w_reg_x, 0x7 },  // ld [830]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::ldr_w_reg_w, 0x7 },  // ld [831]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::ldr_w_reg_w, 0x7 },  // ld [832]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldrsw_reg_x, 0x7 },  // ld [833]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldrsw_reg_x, 0x7 },  // ld [834]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::ldrsw_reg_w, 0x7 },  // ld [835]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::ldrsw_reg_w, 0x7 },  // ld [836]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_h_reg_x, 0x7 },  // ld [837]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_h_reg_x, 0x7 },  // ld [838]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::ldr_h_reg_w, 0x7 },  // ld [839]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::ldr_h_reg_w, 0x7 },  // ld [840]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldrsh_x_reg_x, 0x7 },  // ld [841]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldrsh_x_reg_x, 0x7 },  // ld [842]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::ldrsh_x_reg_w, 0x7 },  // ld [843]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::ldrsh_x_reg_w, 0x7 },  // ld [844]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_b_reg_x, 0x7 },  // ld [845]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldr_b_reg_x, 0x7 },  // ld [846]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::ldr_b_reg_w, 0x7 },  // ld [847]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::ldr_b_reg_w, 0x7 },  // ld [848]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldrsb_x_reg_x, 0x7 },  // ld [849]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::ldrsb_x_reg_x, 0x7 },  // ld [850]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::ldrsb_x_reg_w, 0x7 },  // ld [851]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::ldrsb_x_reg_w, 0x7 },  // ld [852]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::fldr_s_reg_x, 0x7 },  // ld [853]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::fldr_s_reg_x, 0x7 },  // ld [854]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::fldr_s_reg_w, 0x7 },  // ld [855]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::fldr_s_reg_w, 0x7 },  // ld [856]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::fldr_d_reg_x, 0x7 },  // ld [857]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +SHIFT::lsl, 0},
    a64::OPC::fldr_d_reg_x, 0x7 },  // ld [858]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::SXTW, 0},
    a64::OPC::fldr_d_reg_w, 0x7 },  // ld [859]
  { {+PARAM::reg0, +PARAM::reg1, +PARAM::reg2, +FIXARG::UXTW, 0},
    a64::OPC::fldr_d_reg_w, 0x7 },  // ld [860]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [861]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [862]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [863]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [864]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [865]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [866]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [867]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [868]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [869]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [870]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [871]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [872]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [873]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [874]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [875]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_x_imm, 0x5 },  // ld.stk [876]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_w_imm, 0x5 },  // ld.stk [877]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_w_imm, 0x5 },  // ld.stk [878]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_w_imm, 0x5 },  // ld.stk [879]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_w_imm, 0x5 },  // ld.stk [880]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsw_imm, 0x5 },  // ld.stk [881]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsw_imm, 0x5 },  // ld.stk [882]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsw_imm, 0x5 },  // ld.stk [883]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsw_imm, 0x5 },  // ld.stk [884]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsh_x_imm, 0x5 },  // ld.stk [885]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsh_x_imm, 0x5 },  // ld.stk [886]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsh_x_imm, 0x5 },  // ld.stk [887]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsh_x_imm, 0x5 },  // ld.stk [888]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_h_imm, 0x5 },  // ld.stk [889]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_h_imm, 0x5 },  // ld.stk [890]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_h_imm, 0x5 },  // ld.stk [891]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_h_imm, 0x5 },  // ld.stk [892]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_b_imm, 0x5 },  // ld.stk [893]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_b_imm, 0x5 },  // ld.stk [894]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_b_imm, 0x5 },  // ld.stk [895]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldr_b_imm, 0x5 },  // ld.stk [896]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsb_x_imm, 0x5 },  // ld.stk [897]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsb_x_imm, 0x5 },  // ld.stk [898]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsb_x_imm, 0x5 },  // ld.stk [899]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::ldrsb_x_imm, 0x5 },  // ld.stk [900]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::fldr_s_imm, 0x5 },  // ld.stk [901]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::fldr_s_imm, 0x5 },  // ld.stk [902]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::fldr_s_imm, 0x5 },  // ld.stk [903]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::fldr_s_imm, 0x5 },  // ld.stk [904]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::fldr_d_imm, 0x5 },  // ld.stk [905]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::fldr_d_imm, 0x5 },  // ld.stk [906]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::fldr_d_imm, 0x5 },  // ld.stk [907]
  { {+PARAM::reg0, +FIXARG::WZR, +PARAM::stk1_offset2},
    a64::OPC::fldr_d_imm, 0x5 },  // ld.stk [908]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_x, 0x13 },  // st [909]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_x, 0x13 },  // st [910]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_w, 0x13 },  // st [911]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_w, 0x13 },  // st [912]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_x, 0x13 },  // st [913]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_x, 0x13 },  // st [914]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_w, 0x13 },  // st [915]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_w, 0x13 },  // st [916]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_x, 0x13 },  // st [917]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_x, 0x13 },  // st [918]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_w, 0x13 },  // st [919]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_w, 0x13 },  // st [920]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_x, 0x13 },  // st [921]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_x, 0x13 },  // st [922]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_w, 0x13 },  // st [923]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::str_x_reg_w, 0x13 },  // st [924]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_w_reg_x, 0x13 },  // st [925]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_w_reg_x, 0x13 },  // st [926]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::str_w_reg_w, 0x13 },  // st [927]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::str_w_reg_w, 0x13 },  // st [928]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_w_reg_x, 0x13 },  // st [929]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_w_reg_x, 0x13 },  // st [930]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::str_w_reg_w, 0x13 },  // st [931]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::str_w_reg_w, 0x13 },  // st [932]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_h_reg_x, 0x13 },  // st [933]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_h_reg_x, 0x13 },  // st [934]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::str_h_reg_w, 0x13 },  // st [935]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::str_h_reg_w, 0x13 },  // st [936]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_h_reg_x, 0x13 },  // st [937]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_h_reg_x, 0x13 },  // st [938]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::str_h_reg_w, 0x13 },  // st [939]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::str_h_reg_w, 0x13 },  // st [940]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_b_reg_x, 0x13 },  // st [941]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_b_reg_x, 0x13 },  // st [942]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::str_b_reg_w, 0x13 },  // st [943]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::str_b_reg_w, 0x13 },  // st [944]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_b_reg_x, 0x13 },  // st [945]
  { {+PARAM::reg0, +PARAM::reg1, +SHIFT::lsl, 0, +PARAM::reg2},
    a64::OPC::str_b_reg_x, 0x13 },  // st [946]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::SXTW, 0, +PARAM::reg2},
    a64::OPC::str_b_reg_w, 0x13 },  // st [947]
  { {+PARAM::reg0, +PARAM::reg1, +FIXARG::UXTW, 0, +PARAM::reg2},
    a64::OPC::str_b_reg_w, 0x13 },  // st [948]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [949]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [950]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [951]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [952]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [953]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [954]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [955]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [956]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [957]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [958]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [959]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [960]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [961]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [962]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [963]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_x_imm, 0x6 },  // st.stk [964]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_w_imm, 0x6 },  // st.stk [965]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_w_imm, 0x6 },  // st.stk [966]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_w_imm, 0x6 },  // st.stk [967]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_w_imm, 0x6 },  // st.stk [968]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_w_imm, 0x6 },  // st.stk [969]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_w_imm, 0x6 },  // st.stk [970]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_w_imm, 0x6 },  // st.stk [971]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_w_imm, 0x6 },  // st.stk [972]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_h_imm, 0x6 },  // st.stk [973]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_h_imm, 0x6 },  // st.stk [974]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_h_imm, 0x6 },  // st.stk [975]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_h_imm, 0x6 },  // st.stk [976]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_h_imm, 0x6 },  // st.stk [977]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_h_imm, 0x6 },  // st.stk [978]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_h_imm, 0x6 },  // st.stk [979]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_h_imm, 0x6 },  // st.stk [980]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_b_imm, 0x6 },  // st.stk [981]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_b_imm, 0x6 },  // st.stk [982]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_b_imm, 0x6 },  // st.stk [983]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_b_imm, 0x6 },  // st.stk [984]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_b_imm, 0x6 },  // st.stk [985]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_b_imm, 0x6 },  // st.stk [986]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_b_imm, 0x6 },  // st.stk [987]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::str_b_imm, 0x6 },  // st.stk [988]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::fstr_s_imm, 0x6 },  // st.stk [989]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::fstr_s_imm, 0x6 },  // st.stk [990]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::fstr_s_imm, 0x6 },  // st.stk [991]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::fstr_s_imm, 0x6 },  // st.stk [992]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::fstr_d_imm, 0x6 },  // st.stk [993]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::fstr_d_imm, 0x6 },  // st.stk [994]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::fstr_d_imm, 0x6 },  // st.stk [995]
  { {+FIXARG::WZR, +PARAM::stk0_offset1, +PARAM::reg2},
    a64::OPC::fstr_d_imm, 0x6 },  // st.stk [996]
};

const uint16_t kPatternJumper[256] = {
 0 /* --- */,  0 /* .mem */,  0 /* .data */,  0 /* .addr.fun */, 
 0 /* .addr.mem */,  0 /* .fun */,  0 /* .bbl */,  0 /* .reg */, 
 0 /* .stk */,  0 /* .jtb */,  0 /* --- */,  0 /* --- */, 
 0 /* --- */,  0 /* --- */,  0 /* --- */,  0 /* --- */, 
 0 /* add */,  10 /* sub */,  24 /* mul */,  30 /* div */, 
 36 /* rem */,  36 /* min */,  36 /* max */,  36 /* --- */, 
 36 /* xor */,  44 /* and */,  52 /* or */,  60 /* shl */, 
 68 /* shr */,  76 /* --- */,  76 /* --- */,  76 /* --- */, 
 76 /* beq */,  90 /* bne */,  104 /* blt */,  124 /* ble */, 
 144 /* --- */,  144 /* --- */,  144 /* --- */,  144 /* --- */, 
 144 /* switch */,  145 /* bra */,  146 /* ret */,  146 /* bsr */, 
 147 /* jsr */,  148 /* syscall */,  149 /* trap */,  150 /* --- */, 
 150 /* pusharg */,  150 /* poparg */,  150 /* conv */,  217 /* bitcast */, 
 237 /* mov */,  289 /* cmpeq */,  433 /* cmplt */,  475 /* --- */, 
 475 /* lea */,  479 /* lea.mem */,  483 /* lea.stk */,  495 /* lea.fun */, 
 496 /* --- */,  496 /* --- */,  496 /* --- */,  496 /* --- */, 
 496 /* ld */,  544 /* ld.mem */,  544 /* ld.stk */,  592 /* --- */, 
 592 /* --- */,  592 /* --- */,  592 /* --- */,  592 /* --- */, 
 592 /* st */,  632 /* st.mem */,  632 /* st.stk */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* sqrt */,  680 /* abs */,  680 /* sign */,  680 /* ceil */, 
 680 /* floor */,  680 /* trunc */,  680 /* round */,  680 /* sin */, 
 680 /* cos */,  680 /* tan */,  680 /* asin */,  680 /* acos */, 
 680 /* atan */,  680 /* exp */,  680 /* log */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* cntpop */,  680 /* cntlz */,  680 /* cnttz */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* bcopy */,  680 /* --- */,  680 /* bzero */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* st.stks */,  680 /* ld.stks */,  680 /* lea.stks */,  680 /* lds */, 
 680 /* sts */,  680 /* adds */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* .struct */,  680 /* .field */,  680 /* .endstruct */,  680 /* .stk.s */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* nop */,  680 /* nop1 */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
 680 /* --- */,  680 /* --- */,  680 /* --- */,  680 /* --- */, 
};

const Pattern kPatterns[] = {
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[1], 1 },  // add [0]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[2], 1 },  // add [1]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[3], 1 },  // add [2]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[4], 1 },  // add [3]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[5], 1 },  // add [4]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[6], 1 },  // add [5]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[7], 1 },  // add [6]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[8], 1 },  // add [7]
  { {DK::F32, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[9], 1 },  // add [8]
  { {DK::F64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[10], 1 },  // add [9]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[11], 1 },  // sub [10]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[12], 1 },  // sub [11]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::ZERO, IC::INVALID},
    &kInsTemplates[13], 1 },  // sub [12]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[14], 1 },  // sub [13]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[15], 1 },  // sub [14]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::ZERO, IC::INVALID},
    &kInsTemplates[16], 1 },  // sub [15]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[17], 1 },  // sub [16]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[18], 1 },  // sub [17]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::ZERO, IC::INVALID},
    &kInsTemplates[19], 1 },  // sub [18]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[20], 1 },  // sub [19]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[21], 1 },  // sub [20]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::ZERO, IC::INVALID},
    &kInsTemplates[22], 1 },  // sub [21]
  { {DK::F32, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[23], 1 },  // sub [22]
  { {DK::F64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[24], 1 },  // sub [23]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[25], 1 },  // mul [24]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[26], 1 },  // mul [25]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[27], 1 },  // mul [26]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[28], 1 },  // mul [27]
  { {DK::F32, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[29], 1 },  // mul [28]
  { {DK::F64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[30], 1 },  // mul [29]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[31], 1 },  // div [30]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[32], 1 },  // div [31]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[33], 1 },  // div [32]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[34], 1 },  // div [33]
  { {DK::F32, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[35], 1 },  // div [34]
  { {DK::F64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[36], 1 },  // div [35]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[37], 1 },  // xor [36]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_W},
    &kInsTemplates[38], 1 },  // xor [37]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[39], 1 },  // xor [38]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_W},
    &kInsTemplates[40], 1 },  // xor [39]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[41], 1 },  // xor [40]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_W},
    &kInsTemplates[42], 1 },  // xor [41]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[43], 1 },  // xor [42]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_W},
    &kInsTemplates[44], 1 },  // xor [43]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[45], 1 },  // and [44]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_W},
    &kInsTemplates[46], 1 },  // and [45]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[47], 1 },  // and [46]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_W},
    &kInsTemplates[48], 1 },  // and [47]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[49], 1 },  // and [48]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_W},
    &kInsTemplates[50], 1 },  // and [49]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[51], 1 },  // and [50]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_W},
    &kInsTemplates[52], 1 },  // and [51]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[53], 1 },  // or [52]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_W},
    &kInsTemplates[54], 1 },  // or [53]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[55], 1 },  // or [54]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_W},
    &kInsTemplates[56], 1 },  // or [55]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[57], 1 },  // or [56]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_W},
    &kInsTemplates[58], 1 },  // or [57]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[59], 1 },  // or [58]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::IMM_10_15_16_22_W},
    &kInsTemplates[60], 1 },  // or [59]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[61], 1 },  // shl [60]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[62], 1 },  // shl [61]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[63], 1 },  // shl [62]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[64], 1 },  // shl [63]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[65], 1 },  // shl [64]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[66], 1 },  // shl [65]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[67], 1 },  // shl [66]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[68], 1 },  // shl [67]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[69], 1 },  // shr [68]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[70], 1 },  // shr [69]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[71], 1 },  // shr [70]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[72], 1 },  // shr [71]
  { {DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[73], 1 },  // shr [72]
  { {DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[74], 1 },  // shr [73]
  { {DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[75], 1 },  // shr [74]
  { {DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[76], 1 },  // shr [75]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[77], 2 },  // beq [76]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[79], 2 },  // beq [77]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[81], 2 },  // beq [78]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[83], 2 },  // beq [79]
  { {DK::U64, DK::U64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[85], 2 },  // beq [80]
  { {DK::U64, DK::U64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[87], 2 },  // beq [81]
  { {DK::S64, DK::S64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[89], 2 },  // beq [82]
  { {DK::S64, DK::S64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[91], 2 },  // beq [83]
  { {DK::A64, DK::A64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[93], 2 },  // beq [84]
  { {DK::A64, DK::A64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[95], 2 },  // beq [85]
  { {DK::C64, DK::C64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[97], 2 },  // beq [86]
  { {DK::C64, DK::C64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[99], 2 },  // beq [87]
  { {DK::F32, DK::F32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[101], 2 },  // beq [88]
  { {DK::F64, DK::F64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[103], 2 },  // beq [89]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[105], 2 },  // bne [90]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[107], 2 },  // bne [91]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[109], 2 },  // bne [92]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[111], 2 },  // bne [93]
  { {DK::U64, DK::U64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[113], 2 },  // bne [94]
  { {DK::U64, DK::U64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[115], 2 },  // bne [95]
  { {DK::S64, DK::S64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[117], 2 },  // bne [96]
  { {DK::S64, DK::S64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[119], 2 },  // bne [97]
  { {DK::A64, DK::A64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[121], 2 },  // bne [98]
  { {DK::A64, DK::A64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[123], 2 },  // bne [99]
  { {DK::C64, DK::C64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[125], 2 },  // bne [100]
  { {DK::C64, DK::C64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[127], 2 },  // bne [101]
  { {DK::F32, DK::F32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[129], 2 },  // bne [102]
  { {DK::F64, DK::F64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[131], 2 },  // bne [103]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[133], 2 },  // blt [104]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[135], 2 },  // blt [105]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[137], 2 },  // blt [106]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[139], 2 },  // blt [107]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[141], 2 },  // blt [108]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[143], 2 },  // blt [109]
  { {DK::U64, DK::U64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[145], 2 },  // blt [110]
  { {DK::U64, DK::U64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[147], 2 },  // blt [111]
  { {DK::U64, DK::U64, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[149], 2 },  // blt [112]
  { {DK::A64, DK::A64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[151], 2 },  // blt [113]
  { {DK::A64, DK::A64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[153], 2 },  // blt [114]
  { {DK::A64, DK::A64, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[155], 2 },  // blt [115]
  { {DK::C64, DK::C64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[157], 2 },  // blt [116]
  { {DK::C64, DK::C64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[159], 2 },  // blt [117]
  { {DK::C64, DK::C64, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[161], 2 },  // blt [118]
  { {DK::S64, DK::S64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[163], 2 },  // blt [119]
  { {DK::S64, DK::S64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[165], 2 },  // blt [120]
  { {DK::S64, DK::S64, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[167], 2 },  // blt [121]
  { {DK::F32, DK::F32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[169], 2 },  // blt [122]
  { {DK::F64, DK::F64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[171], 2 },  // blt [123]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[173], 2 },  // ble [124]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[175], 2 },  // ble [125]
  { {DK::U32, DK::U32, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[177], 2 },  // ble [126]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[179], 2 },  // ble [127]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[181], 2 },  // ble [128]
  { {DK::S32, DK::S32, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[183], 2 },  // ble [129]
  { {DK::U64, DK::U64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[185], 2 },  // ble [130]
  { {DK::U64, DK::U64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[187], 2 },  // ble [131]
  { {DK::U64, DK::U64, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[189], 2 },  // ble [132]
  { {DK::A64, DK::A64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[191], 2 },  // ble [133]
  { {DK::A64, DK::A64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[193], 2 },  // ble [134]
  { {DK::A64, DK::A64, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[195], 2 },  // ble [135]
  { {DK::C64, DK::C64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[197], 2 },  // ble [136]
  { {DK::C64, DK::C64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[199], 2 },  // ble [137]
  { {DK::C64, DK::C64, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[201], 2 },  // ble [138]
  { {DK::S64, DK::S64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[203], 2 },  // ble [139]
  { {DK::S64, DK::S64, DK::INVALID},
    {IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[205], 2 },  // ble [140]
  { {DK::S64, DK::S64, DK::INVALID},
    {IC::IMM_SHIFTED_10_21_22, IC::INVALID, IC::INVALID},
    &kInsTemplates[207], 2 },  // ble [141]
  { {DK::F32, DK::F32, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[209], 2 },  // ble [142]
  { {DK::F64, DK::F64, DK::INVALID},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[211], 2 },  // ble [143]
  { {DK::U32, DK::INVALID},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[213], 4 },  // switch [144]
  { {DK::INVALID},
    {IC::INVALID},
    &kInsTemplates[217], 1 },  // bra [145]
  { {DK::INVALID},
    {IC::INVALID},
    &kInsTemplates[218], 1 },  // bsr [146]
  { {DK::C64, DK::INVALID},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[219], 1 },  // jsr [147]
  { {DK::INVALID, DK::U32},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[220], 2 },  // syscall [148]
  { {},
    {},
    &kInsTemplates[222], 1 },  // trap [149]
  { {DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[223], 1 },  // conv [150]
  { {DK::U64, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[224], 1 },  // conv [151]
  { {DK::S64, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[225], 1 },  // conv [152]
  { {DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[226], 1 },  // conv [153]
  { {DK::U32, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[227], 1 },  // conv [154]
  { {DK::U32, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[228], 1 },  // conv [155]
  { {DK::S32, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[229], 1 },  // conv [156]
  { {DK::S32, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[230], 1 },  // conv [157]
  { {DK::U16, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[231], 1 },  // conv [158]
  { {DK::U16, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[232], 1 },  // conv [159]
  { {DK::S16, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[233], 1 },  // conv [160]
  { {DK::S16, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[234], 1 },  // conv [161]
  { {DK::U8, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[235], 1 },  // conv [162]
  { {DK::U8, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[236], 1 },  // conv [163]
  { {DK::S8, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[237], 1 },  // conv [164]
  { {DK::S8, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[238], 1 },  // conv [165]
  { {DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[239], 1 },  // conv [166]
  { {DK::U32, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[240], 1 },  // conv [167]
  { {DK::S32, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[241], 1 },  // conv [168]
  { {DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[242], 1 },  // conv [169]
  { {DK::U16, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[243], 1 },  // conv [170]
  { {DK::U16, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[244], 1 },  // conv [171]
  { {DK::S16, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[245], 1 },  // conv [172]
  { {DK::S16, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[246], 1 },  // conv [173]
  { {DK::U8, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[247], 1 },  // conv [174]
  { {DK::U8, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[248], 1 },  // conv [175]
  { {DK::S8, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[249], 1 },  // conv [176]
  { {DK::S8, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[250], 1 },  // conv [177]
  { {DK::U16, DK::U16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[251], 1 },  // conv [178]
  { {DK::U16, DK::S16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[252], 1 },  // conv [179]
  { {DK::S16, DK::U16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[253], 1 },  // conv [180]
  { {DK::S16, DK::S16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[254], 1 },  // conv [181]
  { {DK::U8, DK::U16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[255], 1 },  // conv [182]
  { {DK::U8, DK::S16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[256], 1 },  // conv [183]
  { {DK::S8, DK::U16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[257], 1 },  // conv [184]
  { {DK::S8, DK::S16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[258], 1 },  // conv [185]
  { {DK::U8, DK::U8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[259], 1 },  // conv [186]
  { {DK::U8, DK::S8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[260], 1 },  // conv [187]
  { {DK::S8, DK::U8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[261], 1 },  // conv [188]
  { {DK::S8, DK::S8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[262], 1 },  // conv [189]
  { {DK::U64, DK::U8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[263], 1 },  // conv [190]
  { {DK::U64, DK::U16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[264], 1 },  // conv [191]
  { {DK::U32, DK::U8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[265], 1 },  // conv [192]
  { {DK::U32, DK::U16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[266], 1 },  // conv [193]
  { {DK::U64, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[267], 1 },  // conv [194]
  { {DK::S64, DK::S8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[268], 1 },  // conv [195]
  { {DK::S64, DK::S16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[269], 1 },  // conv [196]
  { {DK::S32, DK::S8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[270], 1 },  // conv [197]
  { {DK::S32, DK::S16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[271], 1 },  // conv [198]
  { {DK::U64, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[272], 1 },  // conv [199]
  { {DK::S64, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[273], 1 },  // conv [200]
  { {DK::F64, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[274], 1 },  // conv [201]
  { {DK::F64, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[275], 1 },  // conv [202]
  { {DK::F32, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[276], 1 },  // conv [203]
  { {DK::F32, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[277], 1 },  // conv [204]
  { {DK::F64, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[278], 1 },  // conv [205]
  { {DK::F64, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[279], 1 },  // conv [206]
  { {DK::F32, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[280], 1 },  // conv [207]
  { {DK::F32, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[281], 1 },  // conv [208]
  { {DK::S32, DK::F32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[282], 1 },  // conv [209]
  { {DK::S32, DK::F64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[283], 1 },  // conv [210]
  { {DK::U32, DK::F32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[284], 1 },  // conv [211]
  { {DK::U32, DK::F64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[285], 1 },  // conv [212]
  { {DK::S64, DK::F32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[286], 1 },  // conv [213]
  { {DK::S64, DK::F64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[287], 1 },  // conv [214]
  { {DK::U64, DK::F32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[288], 1 },  // conv [215]
  { {DK::U64, DK::F64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[289], 1 },  // conv [216]
  { {DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[290], 1 },  // bitcast [217]
  { {DK::U64, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[291], 1 },  // bitcast [218]
  { {DK::U64, DK::A64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[292], 1 },  // bitcast [219]
  { {DK::U64, DK::C64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[293], 1 },  // bitcast [220]
  { {DK::S64, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[294], 1 },  // bitcast [221]
  { {DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[295], 1 },  // bitcast [222]
  { {DK::S64, DK::A64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[296], 1 },  // bitcast [223]
  { {DK::S64, DK::C64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[297], 1 },  // bitcast [224]
  { {DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[298], 1 },  // bitcast [225]
  { {DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[299], 1 },  // bitcast [226]
  { {DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[300], 1 },  // bitcast [227]
  { {DK::A64, DK::C64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[301], 1 },  // bitcast [228]
  { {DK::C64, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[302], 1 },  // bitcast [229]
  { {DK::C64, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[303], 1 },  // bitcast [230]
  { {DK::C64, DK::A64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[304], 1 },  // bitcast [231]
  { {DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[305], 1 },  // bitcast [232]
  { {DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[306], 1 },  // bitcast [233]
  { {DK::U32, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[307], 1 },  // bitcast [234]
  { {DK::S32, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[308], 1 },  // bitcast [235]
  { {DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[309], 1 },  // bitcast [236]
  { {DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[310], 1 },  // mov [237]
  { {DK::A64, DK::A64},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[311], 1 },  // mov [238]
  { {DK::A64, DK::A64},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22_NOT},
    &kInsTemplates[312], 1 },  // mov [239]
  { {DK::A64, DK::A64},
    {IC::INVALID, IC::IMM_POS_32},
    &kInsTemplates[313], 2 },  // mov [240]
  { {DK::A64, DK::A64},
    {IC::INVALID, IC::ANY},
    &kInsTemplates[315], 4 },  // mov [241]
  { {DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[319], 1 },  // mov [242]
  { {DK::C64, DK::C64},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[320], 1 },  // mov [243]
  { {DK::C64, DK::C64},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22_NOT},
    &kInsTemplates[321], 1 },  // mov [244]
  { {DK::C64, DK::C64},
    {IC::INVALID, IC::IMM_POS_32},
    &kInsTemplates[322], 2 },  // mov [245]
  { {DK::C64, DK::C64},
    {IC::INVALID, IC::ANY},
    &kInsTemplates[324], 4 },  // mov [246]
  { {DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[328], 1 },  // mov [247]
  { {DK::U64, DK::U64},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[329], 1 },  // mov [248]
  { {DK::U64, DK::U64},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22_NOT},
    &kInsTemplates[330], 1 },  // mov [249]
  { {DK::U64, DK::U64},
    {IC::INVALID, IC::IMM_POS_32},
    &kInsTemplates[331], 2 },  // mov [250]
  { {DK::U64, DK::U64},
    {IC::INVALID, IC::ANY},
    &kInsTemplates[333], 4 },  // mov [251]
  { {DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[337], 1 },  // mov [252]
  { {DK::S64, DK::S64},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[338], 1 },  // mov [253]
  { {DK::S64, DK::S64},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22_NOT},
    &kInsTemplates[339], 1 },  // mov [254]
  { {DK::S64, DK::S64},
    {IC::INVALID, IC::IMM_POS_32},
    &kInsTemplates[340], 2 },  // mov [255]
  { {DK::S64, DK::S64},
    {IC::INVALID, IC::ANY},
    &kInsTemplates[342], 4 },  // mov [256]
  { {DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[346], 1 },  // mov [257]
  { {DK::U32, DK::U32},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[347], 1 },  // mov [258]
  { {DK::U32, DK::U32},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22_NOT},
    &kInsTemplates[348], 1 },  // mov [259]
  { {DK::U32, DK::U32},
    {IC::INVALID, IC::IMM_POS_32},
    &kInsTemplates[349], 2 },  // mov [260]
  { {DK::U32, DK::U32},
    {IC::INVALID, IC::ANY},
    &kInsTemplates[351], 4 },  // mov [261]
  { {DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[355], 1 },  // mov [262]
  { {DK::S32, DK::S32},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[356], 1 },  // mov [263]
  { {DK::S32, DK::S32},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22_NOT},
    &kInsTemplates[357], 1 },  // mov [264]
  { {DK::S32, DK::S32},
    {IC::INVALID, IC::IMM_POS_32},
    &kInsTemplates[358], 2 },  // mov [265]
  { {DK::S32, DK::S32},
    {IC::INVALID, IC::ANY},
    &kInsTemplates[360], 4 },  // mov [266]
  { {DK::U16, DK::U16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[364], 1 },  // mov [267]
  { {DK::U16, DK::U16},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[365], 1 },  // mov [268]
  { {DK::U16, DK::U16},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22_NOT},
    &kInsTemplates[366], 1 },  // mov [269]
  { {DK::U16, DK::U16},
    {IC::INVALID, IC::IMM_POS_32},
    &kInsTemplates[367], 2 },  // mov [270]
  { {DK::U16, DK::U16},
    {IC::INVALID, IC::ANY},
    &kInsTemplates[369], 4 },  // mov [271]
  { {DK::S16, DK::S16},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[373], 1 },  // mov [272]
  { {DK::S16, DK::S16},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[374], 1 },  // mov [273]
  { {DK::S16, DK::S16},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22_NOT},
    &kInsTemplates[375], 1 },  // mov [274]
  { {DK::S16, DK::S16},
    {IC::INVALID, IC::IMM_POS_32},
    &kInsTemplates[376], 2 },  // mov [275]
  { {DK::S16, DK::S16},
    {IC::INVALID, IC::ANY},
    &kInsTemplates[378], 4 },  // mov [276]
  { {DK::U8, DK::U8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[382], 1 },  // mov [277]
  { {DK::U8, DK::U8},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[383], 1 },  // mov [278]
  { {DK::U8, DK::U8},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22_NOT},
    &kInsTemplates[384], 1 },  // mov [279]
  { {DK::U8, DK::U8},
    {IC::INVALID, IC::IMM_POS_32},
    &kInsTemplates[385], 2 },  // mov [280]
  { {DK::U8, DK::U8},
    {IC::INVALID, IC::ANY},
    &kInsTemplates[387], 4 },  // mov [281]
  { {DK::S8, DK::S8},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[391], 1 },  // mov [282]
  { {DK::S8, DK::S8},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22},
    &kInsTemplates[392], 1 },  // mov [283]
  { {DK::S8, DK::S8},
    {IC::INVALID, IC::IMM_SHIFTED_5_20_21_22_NOT},
    &kInsTemplates[393], 1 },  // mov [284]
  { {DK::S8, DK::S8},
    {IC::INVALID, IC::IMM_POS_32},
    &kInsTemplates[394], 2 },  // mov [285]
  { {DK::S8, DK::S8},
    {IC::INVALID, IC::ANY},
    &kInsTemplates[396], 4 },  // mov [286]
  { {DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[400], 1 },  // mov [287]
  { {DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[401], 1 },  // mov [288]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[402], 2 },  // cmpeq [289]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[404], 2 },  // cmpeq [290]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[406], 2 },  // cmpeq [291]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[408], 2 },  // cmpeq [292]
  { {DK::U32, DK::U32, DK::U32, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[410], 2 },  // cmpeq [293]
  { {DK::U32, DK::U32, DK::U32, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[412], 2 },  // cmpeq [294]
  { {DK::U32, DK::U32, DK::U32, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[414], 2 },  // cmpeq [295]
  { {DK::U32, DK::U32, DK::U32, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[416], 2 },  // cmpeq [296]
  { {DK::U32, DK::U32, DK::U32, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[418], 2 },  // cmpeq [297]
  { {DK::U32, DK::U32, DK::U32, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[420], 2 },  // cmpeq [298]
  { {DK::U32, DK::U32, DK::U32, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[422], 2 },  // cmpeq [299]
  { {DK::U32, DK::U32, DK::U32, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[424], 2 },  // cmpeq [300]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[426], 2 },  // cmpeq [301]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[428], 2 },  // cmpeq [302]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[430], 2 },  // cmpeq [303]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[432], 2 },  // cmpeq [304]
  { {DK::S32, DK::S32, DK::S32, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[434], 2 },  // cmpeq [305]
  { {DK::S32, DK::S32, DK::S32, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[436], 2 },  // cmpeq [306]
  { {DK::S32, DK::S32, DK::S32, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[438], 2 },  // cmpeq [307]
  { {DK::S32, DK::S32, DK::S32, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[440], 2 },  // cmpeq [308]
  { {DK::S32, DK::S32, DK::S32, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[442], 2 },  // cmpeq [309]
  { {DK::S32, DK::S32, DK::S32, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[444], 2 },  // cmpeq [310]
  { {DK::S32, DK::S32, DK::S32, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[446], 2 },  // cmpeq [311]
  { {DK::S32, DK::S32, DK::S32, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[448], 2 },  // cmpeq [312]
  { {DK::U64, DK::U64, DK::U64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[450], 2 },  // cmpeq [313]
  { {DK::U64, DK::U64, DK::U64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[452], 2 },  // cmpeq [314]
  { {DK::U64, DK::U64, DK::U64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[454], 2 },  // cmpeq [315]
  { {DK::U64, DK::U64, DK::U64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[456], 2 },  // cmpeq [316]
  { {DK::U64, DK::U64, DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[458], 2 },  // cmpeq [317]
  { {DK::U64, DK::U64, DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[460], 2 },  // cmpeq [318]
  { {DK::U64, DK::U64, DK::U64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[462], 2 },  // cmpeq [319]
  { {DK::U64, DK::U64, DK::U64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[464], 2 },  // cmpeq [320]
  { {DK::U64, DK::U64, DK::U64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[466], 2 },  // cmpeq [321]
  { {DK::U64, DK::U64, DK::U64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[468], 2 },  // cmpeq [322]
  { {DK::U64, DK::U64, DK::U64, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[470], 2 },  // cmpeq [323]
  { {DK::U64, DK::U64, DK::U64, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[472], 2 },  // cmpeq [324]
  { {DK::S64, DK::S64, DK::S64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[474], 2 },  // cmpeq [325]
  { {DK::S64, DK::S64, DK::S64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[476], 2 },  // cmpeq [326]
  { {DK::S64, DK::S64, DK::S64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[478], 2 },  // cmpeq [327]
  { {DK::S64, DK::S64, DK::S64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[480], 2 },  // cmpeq [328]
  { {DK::S64, DK::S64, DK::S64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[482], 2 },  // cmpeq [329]
  { {DK::S64, DK::S64, DK::S64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[484], 2 },  // cmpeq [330]
  { {DK::S64, DK::S64, DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[486], 2 },  // cmpeq [331]
  { {DK::S64, DK::S64, DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[488], 2 },  // cmpeq [332]
  { {DK::S64, DK::S64, DK::S64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[490], 2 },  // cmpeq [333]
  { {DK::S64, DK::S64, DK::S64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[492], 2 },  // cmpeq [334]
  { {DK::S64, DK::S64, DK::S64, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[494], 2 },  // cmpeq [335]
  { {DK::S64, DK::S64, DK::S64, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[496], 2 },  // cmpeq [336]
  { {DK::A64, DK::A64, DK::A64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[498], 2 },  // cmpeq [337]
  { {DK::A64, DK::A64, DK::A64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[500], 2 },  // cmpeq [338]
  { {DK::A64, DK::A64, DK::A64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[502], 2 },  // cmpeq [339]
  { {DK::A64, DK::A64, DK::A64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[504], 2 },  // cmpeq [340]
  { {DK::A64, DK::A64, DK::A64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[506], 2 },  // cmpeq [341]
  { {DK::A64, DK::A64, DK::A64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[508], 2 },  // cmpeq [342]
  { {DK::A64, DK::A64, DK::A64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[510], 2 },  // cmpeq [343]
  { {DK::A64, DK::A64, DK::A64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[512], 2 },  // cmpeq [344]
  { {DK::A64, DK::A64, DK::A64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[514], 2 },  // cmpeq [345]
  { {DK::A64, DK::A64, DK::A64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[516], 2 },  // cmpeq [346]
  { {DK::A64, DK::A64, DK::A64, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[518], 2 },  // cmpeq [347]
  { {DK::A64, DK::A64, DK::A64, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[520], 2 },  // cmpeq [348]
  { {DK::C64, DK::C64, DK::C64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[522], 2 },  // cmpeq [349]
  { {DK::C64, DK::C64, DK::C64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[524], 2 },  // cmpeq [350]
  { {DK::C64, DK::C64, DK::C64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[526], 2 },  // cmpeq [351]
  { {DK::C64, DK::C64, DK::C64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[528], 2 },  // cmpeq [352]
  { {DK::C64, DK::C64, DK::C64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[530], 2 },  // cmpeq [353]
  { {DK::C64, DK::C64, DK::C64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[532], 2 },  // cmpeq [354]
  { {DK::C64, DK::C64, DK::C64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[534], 2 },  // cmpeq [355]
  { {DK::C64, DK::C64, DK::C64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[536], 2 },  // cmpeq [356]
  { {DK::C64, DK::C64, DK::C64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[538], 2 },  // cmpeq [357]
  { {DK::C64, DK::C64, DK::C64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[540], 2 },  // cmpeq [358]
  { {DK::C64, DK::C64, DK::C64, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[542], 2 },  // cmpeq [359]
  { {DK::C64, DK::C64, DK::C64, DK::C64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[544], 2 },  // cmpeq [360]
  { {DK::U64, DK::U64, DK::U64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[546], 2 },  // cmpeq [361]
  { {DK::U64, DK::U64, DK::U64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[548], 2 },  // cmpeq [362]
  { {DK::U64, DK::U64, DK::U64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[550], 2 },  // cmpeq [363]
  { {DK::U64, DK::U64, DK::U64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[552], 2 },  // cmpeq [364]
  { {DK::S64, DK::S64, DK::S64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[554], 2 },  // cmpeq [365]
  { {DK::S64, DK::S64, DK::S64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[556], 2 },  // cmpeq [366]
  { {DK::S64, DK::S64, DK::S64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[558], 2 },  // cmpeq [367]
  { {DK::S64, DK::S64, DK::S64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[560], 2 },  // cmpeq [368]
  { {DK::A64, DK::A64, DK::A64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[562], 2 },  // cmpeq [369]
  { {DK::A64, DK::A64, DK::A64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[564], 2 },  // cmpeq [370]
  { {DK::A64, DK::A64, DK::A64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[566], 2 },  // cmpeq [371]
  { {DK::A64, DK::A64, DK::A64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[568], 2 },  // cmpeq [372]
  { {DK::C64, DK::C64, DK::C64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[570], 2 },  // cmpeq [373]
  { {DK::C64, DK::C64, DK::C64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[572], 2 },  // cmpeq [374]
  { {DK::C64, DK::C64, DK::C64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[574], 2 },  // cmpeq [375]
  { {DK::C64, DK::C64, DK::C64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[576], 2 },  // cmpeq [376]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[578], 2 },  // cmpeq [377]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[580], 2 },  // cmpeq [378]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[582], 2 },  // cmpeq [379]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[584], 2 },  // cmpeq [380]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[586], 2 },  // cmpeq [381]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[588], 2 },  // cmpeq [382]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[590], 2 },  // cmpeq [383]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[592], 2 },  // cmpeq [384]
  { {DK::U64, DK::U64, DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[594], 2 },  // cmpeq [385]
  { {DK::U64, DK::U64, DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[596], 2 },  // cmpeq [386]
  { {DK::U64, DK::U64, DK::U64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[598], 2 },  // cmpeq [387]
  { {DK::U64, DK::U64, DK::U64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[600], 2 },  // cmpeq [388]
  { {DK::U64, DK::U64, DK::U64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[602], 2 },  // cmpeq [389]
  { {DK::U64, DK::U64, DK::U64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[604], 2 },  // cmpeq [390]
  { {DK::S64, DK::S64, DK::S64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[606], 2 },  // cmpeq [391]
  { {DK::S64, DK::S64, DK::S64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[608], 2 },  // cmpeq [392]
  { {DK::S64, DK::S64, DK::S64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[610], 2 },  // cmpeq [393]
  { {DK::S64, DK::S64, DK::S64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[612], 2 },  // cmpeq [394]
  { {DK::S64, DK::S64, DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[614], 2 },  // cmpeq [395]
  { {DK::S64, DK::S64, DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[616], 2 },  // cmpeq [396]
  { {DK::A64, DK::A64, DK::A64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[618], 2 },  // cmpeq [397]
  { {DK::A64, DK::A64, DK::A64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[620], 2 },  // cmpeq [398]
  { {DK::A64, DK::A64, DK::A64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[622], 2 },  // cmpeq [399]
  { {DK::A64, DK::A64, DK::A64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[624], 2 },  // cmpeq [400]
  { {DK::A64, DK::A64, DK::A64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[626], 2 },  // cmpeq [401]
  { {DK::A64, DK::A64, DK::A64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[628], 2 },  // cmpeq [402]
  { {DK::C64, DK::C64, DK::C64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[630], 2 },  // cmpeq [403]
  { {DK::C64, DK::C64, DK::C64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[632], 2 },  // cmpeq [404]
  { {DK::C64, DK::C64, DK::C64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[634], 2 },  // cmpeq [405]
  { {DK::C64, DK::C64, DK::C64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[636], 2 },  // cmpeq [406]
  { {DK::C64, DK::C64, DK::C64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[638], 2 },  // cmpeq [407]
  { {DK::C64, DK::C64, DK::C64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[640], 2 },  // cmpeq [408]
  { {DK::U32, DK::U32, DK::U32, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[642], 2 },  // cmpeq [409]
  { {DK::U32, DK::U32, DK::U32, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[644], 2 },  // cmpeq [410]
  { {DK::U32, DK::U32, DK::U32, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[646], 2 },  // cmpeq [411]
  { {DK::U32, DK::U32, DK::U32, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[648], 2 },  // cmpeq [412]
  { {DK::U32, DK::U32, DK::U32, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[650], 2 },  // cmpeq [413]
  { {DK::U32, DK::U32, DK::U32, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[652], 2 },  // cmpeq [414]
  { {DK::S32, DK::S32, DK::S32, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[654], 2 },  // cmpeq [415]
  { {DK::S32, DK::S32, DK::S32, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[656], 2 },  // cmpeq [416]
  { {DK::S32, DK::S32, DK::S32, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[658], 2 },  // cmpeq [417]
  { {DK::S32, DK::S32, DK::S32, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[660], 2 },  // cmpeq [418]
  { {DK::S32, DK::S32, DK::S32, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22},
    &kInsTemplates[662], 2 },  // cmpeq [419]
  { {DK::S32, DK::S32, DK::S32, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::IMM_SHIFTED_10_21_22, IC::INVALID},
    &kInsTemplates[664], 2 },  // cmpeq [420]
  { {DK::U32, DK::U32, DK::U32, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[666], 2 },  // cmpeq [421]
  { {DK::U32, DK::U32, DK::U32, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[668], 2 },  // cmpeq [422]
  { {DK::S32, DK::S32, DK::S32, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[670], 2 },  // cmpeq [423]
  { {DK::S32, DK::S32, DK::S32, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[672], 2 },  // cmpeq [424]
  { {DK::U64, DK::U64, DK::U64, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[674], 2 },  // cmpeq [425]
  { {DK::U64, DK::U64, DK::U64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[676], 2 },  // cmpeq [426]
  { {DK::S64, DK::S64, DK::S64, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[678], 2 },  // cmpeq [427]
  { {DK::S64, DK::S64, DK::S64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[680], 2 },  // cmpeq [428]
  { {DK::A64, DK::A64, DK::A64, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[682], 2 },  // cmpeq [429]
  { {DK::A64, DK::A64, DK::A64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[684], 2 },  // cmpeq [430]
  { {DK::C64, DK::C64, DK::C64, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[686], 2 },  // cmpeq [431]
  { {DK::C64, DK::C64, DK::C64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[688], 2 },  // cmpeq [432]
  { {DK::U64, DK::U64, DK::U64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[690], 2 },  // cmplt [433]
  { {DK::U64, DK::U64, DK::U64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[692], 2 },  // cmplt [434]
  { {DK::S64, DK::S64, DK::S64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[694], 2 },  // cmplt [435]
  { {DK::S64, DK::S64, DK::S64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[696], 2 },  // cmplt [436]
  { {DK::A64, DK::A64, DK::A64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[698], 2 },  // cmplt [437]
  { {DK::A64, DK::A64, DK::A64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[700], 2 },  // cmplt [438]
  { {DK::C64, DK::C64, DK::C64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[702], 2 },  // cmplt [439]
  { {DK::C64, DK::C64, DK::C64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[704], 2 },  // cmplt [440]
  { {DK::U32, DK::U32, DK::U32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[706], 2 },  // cmplt [441]
  { {DK::U32, DK::U32, DK::U32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[708], 2 },  // cmplt [442]
  { {DK::S32, DK::S32, DK::S32, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[710], 2 },  // cmplt [443]
  { {DK::S32, DK::S32, DK::S32, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[712], 2 },  // cmplt [444]
  { {DK::U64, DK::U64, DK::U64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[714], 2 },  // cmplt [445]
  { {DK::U64, DK::U64, DK::U64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[716], 2 },  // cmplt [446]
  { {DK::U64, DK::U64, DK::U64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[718], 2 },  // cmplt [447]
  { {DK::S64, DK::S64, DK::S64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[720], 2 },  // cmplt [448]
  { {DK::S64, DK::S64, DK::S64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[722], 2 },  // cmplt [449]
  { {DK::S64, DK::S64, DK::S64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[724], 2 },  // cmplt [450]
  { {DK::A64, DK::A64, DK::A64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[726], 2 },  // cmplt [451]
  { {DK::A64, DK::A64, DK::A64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[728], 2 },  // cmplt [452]
  { {DK::A64, DK::A64, DK::A64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[730], 2 },  // cmplt [453]
  { {DK::C64, DK::C64, DK::C64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[732], 2 },  // cmplt [454]
  { {DK::C64, DK::C64, DK::C64, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[734], 2 },  // cmplt [455]
  { {DK::C64, DK::C64, DK::C64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[736], 2 },  // cmplt [456]
  { {DK::U32, DK::U32, DK::U32, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[738], 2 },  // cmplt [457]
  { {DK::U32, DK::U32, DK::U32, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[740], 2 },  // cmplt [458]
  { {DK::U32, DK::U32, DK::U32, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[742], 2 },  // cmplt [459]
  { {DK::S32, DK::S32, DK::S32, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[744], 2 },  // cmplt [460]
  { {DK::S32, DK::S32, DK::S32, DK::A64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[746], 2 },  // cmplt [461]
  { {DK::S32, DK::S32, DK::S32, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[748], 2 },  // cmplt [462]
  { {DK::U32, DK::U32, DK::U32, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[750], 2 },  // cmplt [463]
  { {DK::U32, DK::U32, DK::U32, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[752], 2 },  // cmplt [464]
  { {DK::S32, DK::S32, DK::S32, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[754], 2 },  // cmplt [465]
  { {DK::S32, DK::S32, DK::S32, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[756], 2 },  // cmplt [466]
  { {DK::U64, DK::U64, DK::U64, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[758], 2 },  // cmplt [467]
  { {DK::U64, DK::U64, DK::U64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[760], 2 },  // cmplt [468]
  { {DK::S64, DK::S64, DK::S64, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[762], 2 },  // cmplt [469]
  { {DK::S64, DK::S64, DK::S64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[764], 2 },  // cmplt [470]
  { {DK::A64, DK::A64, DK::A64, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[766], 2 },  // cmplt [471]
  { {DK::A64, DK::A64, DK::A64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[768], 2 },  // cmplt [472]
  { {DK::C64, DK::C64, DK::C64, DK::F32, DK::F32},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[770], 2 },  // cmplt [473]
  { {DK::C64, DK::C64, DK::C64, DK::F64, DK::F64},
    {IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[772], 2 },  // cmplt [474]
  { {DK::A64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[774], 1 },  // lea [475]
  { {DK::A64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[775], 1 },  // lea [476]
  { {DK::A64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[776], 1 },  // lea [477]
  { {DK::A64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[777], 1 },  // lea [478]
  { {DK::A64, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[778], 2 },  // lea.mem [479]
  { {DK::A64, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[780], 2 },  // lea.mem [480]
  { {DK::A64, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[782], 2 },  // lea.mem [481]
  { {DK::A64, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::ANY},
    &kInsTemplates[784], 2 },  // lea.mem [482]
  { {DK::A64, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_shifted_10_21_22},
    &kInsTemplates[786], 1 },  // lea.stk [483]
  { {DK::A64, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_16_bits},
    &kInsTemplates[787], 2 },  // lea.stk [484]
  { {DK::A64, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_32_bits},
    &kInsTemplates[789], 3 },  // lea.stk [485]
  { {DK::A64, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_shifted_10_21_22},
    &kInsTemplates[792], 1 },  // lea.stk [486]
  { {DK::A64, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_16_bits},
    &kInsTemplates[793], 2 },  // lea.stk [487]
  { {DK::A64, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_32_bits},
    &kInsTemplates[795], 3 },  // lea.stk [488]
  { {DK::A64, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_shifted_10_21_22},
    &kInsTemplates[798], 1 },  // lea.stk [489]
  { {DK::A64, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_16_bits},
    &kInsTemplates[799], 2 },  // lea.stk [490]
  { {DK::A64, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_32_bits},
    &kInsTemplates[801], 3 },  // lea.stk [491]
  { {DK::A64, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_shifted_10_21_22},
    &kInsTemplates[804], 1 },  // lea.stk [492]
  { {DK::A64, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_16_bits},
    &kInsTemplates[805], 2 },  // lea.stk [493]
  { {DK::A64, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_32_bits},
    &kInsTemplates[807], 3 },  // lea.stk [494]
  { {DK::C64, DK::INVALID},
    {IC::INVALID, IC::INVALID},
    &kInsTemplates[810], 2 },  // lea.fun [495]
  { {DK::U64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[812], 1 },  // ld [496]
  { {DK::U64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[813], 1 },  // ld [497]
  { {DK::U64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[814], 1 },  // ld [498]
  { {DK::U64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[815], 1 },  // ld [499]
  { {DK::S64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[816], 1 },  // ld [500]
  { {DK::S64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[817], 1 },  // ld [501]
  { {DK::S64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[818], 1 },  // ld [502]
  { {DK::S64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[819], 1 },  // ld [503]
  { {DK::A64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[820], 1 },  // ld [504]
  { {DK::A64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[821], 1 },  // ld [505]
  { {DK::A64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[822], 1 },  // ld [506]
  { {DK::A64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[823], 1 },  // ld [507]
  { {DK::C64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[824], 1 },  // ld [508]
  { {DK::C64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[825], 1 },  // ld [509]
  { {DK::C64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[826], 1 },  // ld [510]
  { {DK::C64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[827], 1 },  // ld [511]
  { {DK::U32, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[828], 1 },  // ld [512]
  { {DK::U32, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[829], 1 },  // ld [513]
  { {DK::U32, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[830], 1 },  // ld [514]
  { {DK::U32, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[831], 1 },  // ld [515]
  { {DK::S32, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[832], 1 },  // ld [516]
  { {DK::S32, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[833], 1 },  // ld [517]
  { {DK::S32, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[834], 1 },  // ld [518]
  { {DK::S32, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[835], 1 },  // ld [519]
  { {DK::U16, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[836], 1 },  // ld [520]
  { {DK::U16, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[837], 1 },  // ld [521]
  { {DK::U16, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[838], 1 },  // ld [522]
  { {DK::U16, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[839], 1 },  // ld [523]
  { {DK::S16, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[840], 1 },  // ld [524]
  { {DK::S16, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[841], 1 },  // ld [525]
  { {DK::S16, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[842], 1 },  // ld [526]
  { {DK::S16, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[843], 1 },  // ld [527]
  { {DK::U8, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[844], 1 },  // ld [528]
  { {DK::U8, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[845], 1 },  // ld [529]
  { {DK::U8, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[846], 1 },  // ld [530]
  { {DK::U8, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[847], 1 },  // ld [531]
  { {DK::S8, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[848], 1 },  // ld [532]
  { {DK::S8, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[849], 1 },  // ld [533]
  { {DK::S8, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[850], 1 },  // ld [534]
  { {DK::S8, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[851], 1 },  // ld [535]
  { {DK::F32, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[852], 1 },  // ld [536]
  { {DK::F32, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[853], 1 },  // ld [537]
  { {DK::F32, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[854], 1 },  // ld [538]
  { {DK::F32, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[855], 1 },  // ld [539]
  { {DK::F64, DK::A64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[856], 1 },  // ld [540]
  { {DK::F64, DK::A64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[857], 1 },  // ld [541]
  { {DK::F64, DK::A64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[858], 1 },  // ld [542]
  { {DK::F64, DK::A64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[859], 1 },  // ld [543]
  { {DK::U64, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[860], 1 },  // ld.stk [544]
  { {DK::U64, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[861], 1 },  // ld.stk [545]
  { {DK::U64, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[862], 1 },  // ld.stk [546]
  { {DK::U64, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[863], 1 },  // ld.stk [547]
  { {DK::S64, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[864], 1 },  // ld.stk [548]
  { {DK::S64, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[865], 1 },  // ld.stk [549]
  { {DK::S64, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[866], 1 },  // ld.stk [550]
  { {DK::S64, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[867], 1 },  // ld.stk [551]
  { {DK::A64, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[868], 1 },  // ld.stk [552]
  { {DK::A64, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[869], 1 },  // ld.stk [553]
  { {DK::A64, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[870], 1 },  // ld.stk [554]
  { {DK::A64, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[871], 1 },  // ld.stk [555]
  { {DK::C64, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[872], 1 },  // ld.stk [556]
  { {DK::C64, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[873], 1 },  // ld.stk [557]
  { {DK::C64, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[874], 1 },  // ld.stk [558]
  { {DK::C64, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[875], 1 },  // ld.stk [559]
  { {DK::U32, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[876], 1 },  // ld.stk [560]
  { {DK::U32, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[877], 1 },  // ld.stk [561]
  { {DK::U32, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[878], 1 },  // ld.stk [562]
  { {DK::U32, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[879], 1 },  // ld.stk [563]
  { {DK::S32, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[880], 1 },  // ld.stk [564]
  { {DK::S32, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[881], 1 },  // ld.stk [565]
  { {DK::S32, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[882], 1 },  // ld.stk [566]
  { {DK::S32, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[883], 1 },  // ld.stk [567]
  { {DK::U16, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_2},
    &kInsTemplates[884], 1 },  // ld.stk [568]
  { {DK::U16, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_2},
    &kInsTemplates[885], 1 },  // ld.stk [569]
  { {DK::U16, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_2},
    &kInsTemplates[886], 1 },  // ld.stk [570]
  { {DK::U16, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_2},
    &kInsTemplates[887], 1 },  // ld.stk [571]
  { {DK::S16, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_2},
    &kInsTemplates[888], 1 },  // ld.stk [572]
  { {DK::S16, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_2},
    &kInsTemplates[889], 1 },  // ld.stk [573]
  { {DK::S16, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_2},
    &kInsTemplates[890], 1 },  // ld.stk [574]
  { {DK::S16, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_2},
    &kInsTemplates[891], 1 },  // ld.stk [575]
  { {DK::U8, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21},
    &kInsTemplates[892], 1 },  // ld.stk [576]
  { {DK::U8, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21},
    &kInsTemplates[893], 1 },  // ld.stk [577]
  { {DK::U8, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21},
    &kInsTemplates[894], 1 },  // ld.stk [578]
  { {DK::U8, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21},
    &kInsTemplates[895], 1 },  // ld.stk [579]
  { {DK::S8, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21},
    &kInsTemplates[896], 1 },  // ld.stk [580]
  { {DK::S8, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21},
    &kInsTemplates[897], 1 },  // ld.stk [581]
  { {DK::S8, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21},
    &kInsTemplates[898], 1 },  // ld.stk [582]
  { {DK::S8, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21},
    &kInsTemplates[899], 1 },  // ld.stk [583]
  { {DK::F32, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[900], 1 },  // ld.stk [584]
  { {DK::F32, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[901], 1 },  // ld.stk [585]
  { {DK::F32, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[902], 1 },  // ld.stk [586]
  { {DK::F32, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_4},
    &kInsTemplates[903], 1 },  // ld.stk [587]
  { {DK::F32, DK::INVALID, DK::S64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[904], 1 },  // ld.stk [588]
  { {DK::F32, DK::INVALID, DK::U64},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[905], 1 },  // ld.stk [589]
  { {DK::F32, DK::INVALID, DK::S32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[906], 1 },  // ld.stk [590]
  { {DK::F32, DK::INVALID, DK::U32},
    {IC::INVALID, IC::INVALID, IC::pos_stk_combo_10_21_times_8},
    &kInsTemplates[907], 1 },  // ld.stk [591]
  { {DK::A64, DK::S64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[908], 1 },  // st [592]
  { {DK::A64, DK::U64, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[909], 1 },  // st [593]
  { {DK::A64, DK::S32, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[910], 1 },  // st [594]
  { {DK::A64, DK::U32, DK::U64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[911], 1 },  // st [595]
  { {DK::A64, DK::S64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[912], 1 },  // st [596]
  { {DK::A64, DK::U64, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[913], 1 },  // st [597]
  { {DK::A64, DK::S32, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[914], 1 },  // st [598]
  { {DK::A64, DK::U32, DK::S64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[915], 1 },  // st [599]
  { {DK::A64, DK::S64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[916], 1 },  // st [600]
  { {DK::A64, DK::U64, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[917], 1 },  // st [601]
  { {DK::A64, DK::S32, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[918], 1 },  // st [602]
  { {DK::A64, DK::U32, DK::A64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[919], 1 },  // st [603]
  { {DK::A64, DK::S64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[920], 1 },  // st [604]
  { {DK::A64, DK::U64, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[921], 1 },  // st [605]
  { {DK::A64, DK::S32, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[922], 1 },  // st [606]
  { {DK::A64, DK::U32, DK::C64},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[923], 1 },  // st [607]
  { {DK::A64, DK::S64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[924], 1 },  // st [608]
  { {DK::A64, DK::U64, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[925], 1 },  // st [609]
  { {DK::A64, DK::S32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[926], 1 },  // st [610]
  { {DK::A64, DK::U32, DK::U32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[927], 1 },  // st [611]
  { {DK::A64, DK::S64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[928], 1 },  // st [612]
  { {DK::A64, DK::U64, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[929], 1 },  // st [613]
  { {DK::A64, DK::S32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[930], 1 },  // st [614]
  { {DK::A64, DK::U32, DK::S32},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[931], 1 },  // st [615]
  { {DK::A64, DK::S64, DK::U16},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[932], 1 },  // st [616]
  { {DK::A64, DK::U64, DK::U16},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[933], 1 },  // st [617]
  { {DK::A64, DK::S32, DK::U16},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[934], 1 },  // st [618]
  { {DK::A64, DK::U32, DK::U16},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[935], 1 },  // st [619]
  { {DK::A64, DK::S64, DK::S16},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[936], 1 },  // st [620]
  { {DK::A64, DK::U64, DK::S16},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[937], 1 },  // st [621]
  { {DK::A64, DK::S32, DK::S16},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[938], 1 },  // st [622]
  { {DK::A64, DK::U32, DK::S16},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[939], 1 },  // st [623]
  { {DK::A64, DK::S64, DK::U8},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[940], 1 },  // st [624]
  { {DK::A64, DK::U64, DK::U8},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[941], 1 },  // st [625]
  { {DK::A64, DK::S32, DK::U8},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[942], 1 },  // st [626]
  { {DK::A64, DK::U32, DK::U8},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[943], 1 },  // st [627]
  { {DK::A64, DK::S64, DK::S8},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[944], 1 },  // st [628]
  { {DK::A64, DK::U64, DK::S8},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[945], 1 },  // st [629]
  { {DK::A64, DK::S32, DK::S8},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[946], 1 },  // st [630]
  { {DK::A64, DK::U32, DK::S8},
    {IC::INVALID, IC::INVALID, IC::INVALID},
    &kInsTemplates[947], 1 },  // st [631]
  { {DK::INVALID, DK::S64, DK::U64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[948], 1 },  // st.stk [632]
  { {DK::INVALID, DK::U64, DK::U64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[949], 1 },  // st.stk [633]
  { {DK::INVALID, DK::S32, DK::U64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[950], 1 },  // st.stk [634]
  { {DK::INVALID, DK::U32, DK::U64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[951], 1 },  // st.stk [635]
  { {DK::INVALID, DK::S64, DK::S64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[952], 1 },  // st.stk [636]
  { {DK::INVALID, DK::U64, DK::S64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[953], 1 },  // st.stk [637]
  { {DK::INVALID, DK::S32, DK::S64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[954], 1 },  // st.stk [638]
  { {DK::INVALID, DK::U32, DK::S64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[955], 1 },  // st.stk [639]
  { {DK::INVALID, DK::S64, DK::A64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[956], 1 },  // st.stk [640]
  { {DK::INVALID, DK::U64, DK::A64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[957], 1 },  // st.stk [641]
  { {DK::INVALID, DK::S32, DK::A64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[958], 1 },  // st.stk [642]
  { {DK::INVALID, DK::U32, DK::A64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[959], 1 },  // st.stk [643]
  { {DK::INVALID, DK::S64, DK::C64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[960], 1 },  // st.stk [644]
  { {DK::INVALID, DK::U64, DK::C64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[961], 1 },  // st.stk [645]
  { {DK::INVALID, DK::S32, DK::C64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[962], 1 },  // st.stk [646]
  { {DK::INVALID, DK::U32, DK::C64},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[963], 1 },  // st.stk [647]
  { {DK::INVALID, DK::S64, DK::U32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[964], 1 },  // st.stk [648]
  { {DK::INVALID, DK::U64, DK::U32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[965], 1 },  // st.stk [649]
  { {DK::INVALID, DK::S32, DK::U32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[966], 1 },  // st.stk [650]
  { {DK::INVALID, DK::U32, DK::U32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[967], 1 },  // st.stk [651]
  { {DK::INVALID, DK::S64, DK::S32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[968], 1 },  // st.stk [652]
  { {DK::INVALID, DK::U64, DK::S32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[969], 1 },  // st.stk [653]
  { {DK::INVALID, DK::S32, DK::S32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[970], 1 },  // st.stk [654]
  { {DK::INVALID, DK::U32, DK::S32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[971], 1 },  // st.stk [655]
  { {DK::INVALID, DK::S64, DK::U16},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_2, IC::INVALID},
    &kInsTemplates[972], 1 },  // st.stk [656]
  { {DK::INVALID, DK::U64, DK::U16},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_2, IC::INVALID},
    &kInsTemplates[973], 1 },  // st.stk [657]
  { {DK::INVALID, DK::S32, DK::U16},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_2, IC::INVALID},
    &kInsTemplates[974], 1 },  // st.stk [658]
  { {DK::INVALID, DK::U32, DK::U16},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_2, IC::INVALID},
    &kInsTemplates[975], 1 },  // st.stk [659]
  { {DK::INVALID, DK::S64, DK::S16},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_2, IC::INVALID},
    &kInsTemplates[976], 1 },  // st.stk [660]
  { {DK::INVALID, DK::U64, DK::S16},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_2, IC::INVALID},
    &kInsTemplates[977], 1 },  // st.stk [661]
  { {DK::INVALID, DK::S32, DK::S16},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_2, IC::INVALID},
    &kInsTemplates[978], 1 },  // st.stk [662]
  { {DK::INVALID, DK::U32, DK::S16},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_2, IC::INVALID},
    &kInsTemplates[979], 1 },  // st.stk [663]
  { {DK::INVALID, DK::S64, DK::U8},
    {IC::INVALID, IC::pos_stk_combo_10_21, IC::INVALID},
    &kInsTemplates[980], 1 },  // st.stk [664]
  { {DK::INVALID, DK::U64, DK::U8},
    {IC::INVALID, IC::pos_stk_combo_10_21, IC::INVALID},
    &kInsTemplates[981], 1 },  // st.stk [665]
  { {DK::INVALID, DK::S32, DK::U8},
    {IC::INVALID, IC::pos_stk_combo_10_21, IC::INVALID},
    &kInsTemplates[982], 1 },  // st.stk [666]
  { {DK::INVALID, DK::U32, DK::U8},
    {IC::INVALID, IC::pos_stk_combo_10_21, IC::INVALID},
    &kInsTemplates[983], 1 },  // st.stk [667]
  { {DK::INVALID, DK::S64, DK::S8},
    {IC::INVALID, IC::pos_stk_combo_10_21, IC::INVALID},
    &kInsTemplates[984], 1 },  // st.stk [668]
  { {DK::INVALID, DK::U64, DK::S8},
    {IC::INVALID, IC::pos_stk_combo_10_21, IC::INVALID},
    &kInsTemplates[985], 1 },  // st.stk [669]
  { {DK::INVALID, DK::S32, DK::S8},
    {IC::INVALID, IC::pos_stk_combo_10_21, IC::INVALID},
    &kInsTemplates[986], 1 },  // st.stk [670]
  { {DK::INVALID, DK::U32, DK::S8},
    {IC::INVALID, IC::pos_stk_combo_10_21, IC::INVALID},
    &kInsTemplates[987], 1 },  // st.stk [671]
  { {DK::INVALID, DK::S64, DK::F32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[988], 1 },  // st.stk [672]
  { {DK::INVALID, DK::U64, DK::F32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[989], 1 },  // st.stk [673]
  { {DK::INVALID, DK::S32, DK::F32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[990], 1 },  // st.stk [674]
  { {DK::INVALID, DK::U32, DK::F32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_4, IC::INVALID},
    &kInsTemplates[991], 1 },  // st.stk [675]
  { {DK::INVALID, DK::S64, DK::F32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[992], 1 },  // st.stk [676]
  { {DK::INVALID, DK::U64, DK::F32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[993], 1 },  // st.stk [677]
  { {DK::INVALID, DK::S32, DK::F32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[994], 1 },  // st.stk [678]
  { {DK::INVALID, DK::U32, DK::F32},
    {IC::INVALID, IC::pos_stk_combo_10_21_times_8, IC::INVALID},
    &kInsTemplates[995], 1 },  // st.stk [679]
};
}  // namespace

const char* const IMM_CURB_ToStringMap[] = {
    "INVALID", // 0
    "ZERO", // 1
    "ANY", // 2
    "IMM_SHIFTED_10_21_22", // 3
    "IMM_10_15_16_22_W", // 4
    "IMM_10_15_16_22_X", // 5
    "IMM_SHIFTED_5_20_21_22", // 6
    "IMM_SHIFTED_5_20_21_22_NOT", // 7
    "pos_stk_combo_shifted_10_21_22", // 8
    "pos_stk_combo_16_bits", // 9
    "pos_stk_combo_32_bits", // 10
    "pos_stk_combo_10_21", // 11
    "pos_stk_combo_10_21_times_2", // 12
    "pos_stk_combo_10_21_times_4", // 13
    "pos_stk_combo_10_21_times_8", // 14
    "IMM_POS_32", // 15
};
const char* EnumToString(IMM_CURB x) { return IMM_CURB_ToStringMap[unsigned(x)]; }


const char* const PARAM_ToStringMap[] = {
    "invalid", // 0
    "reg0", // 1
    "reg1", // 2
    "reg2", // 3
    "reg3", // 4
    "reg4", // 5
    "num0", // 6
    "num1", // 7
    "num2", // 8
    "num3", // 9
    "num4", // 10
    "num0_neg", // 11
    "num1_neg", // 12
    "num2_neg", // 13
    "num3_neg", // 14
    "num4_neg", // 15
    "num0_not", // 16
    "num1_not", // 17
    "num2_not", // 18
    "bbl0", // 19
    "bbl2", // 20
    "fun0", // 21
    "scratch_gpr", // 22
    "scratch_flt", // 23
    "num2_rsb_width", // 24
    "num2_rsb_width_minus1", // 25
    "mem1_num2_prel_hi21", // 26
    "mem1_num2_lo12", // 27
    "stk1_offset2", // 28
    "stk1_offset2_lo", // 29
    "stk1_offset2_hi", // 30
    "stk0_offset1", // 31
    "stk0_offset1_lo", // 32
    "stk0_offset1_hi", // 33
    "fun1_prel_hi21", // 34
    "fun1_lo12", // 35
    "jtb1_prel_hi21", // 36
    "jtb1_lo12", // 37
    "num1_0_16", // 38
    "num1_16_32", // 39
    "num1_32_48", // 40
    "num1_48_64", // 41
};
const char* EnumToString(PARAM x) { return PARAM_ToStringMap[unsigned(x)]; }

/* @AUTOGEN-END@ */

const Pattern* FindMatchingPattern(Ins ins) {
  const uint64_t type_matcher = ExtractTypeMaskForPattern(ins);
  const OPC opc = InsOPC(ins);
  const uint16_t end = kPatternJumper[unsigned(opc) + 1];
  for (unsigned p = kPatternJumper[unsigned(opc)]; p < end; ++p) {
    const Pattern& pat = kPatterns[p];
    if (!PatternMatchesTypeCurbs(pat, type_matcher)) continue;
    if (0 == PatternMismatchesImmCurbs(pat, ins, false)) {
      return &pat;
    }
  }
  return nullptr;
}

uint8_t FindtImmediateMismatchesInBestMatchPattern(Ins ins,
                                                   bool assume_stk_op_matches) {
  uint8_t best = MATCH_IMPOSSIBLE;
  uint8_t best_num_bits = __builtin_popcount(best);
  const uint64_t type_matcher = ExtractTypeMaskForPattern(ins);
  // std::cout << "@type_matcher: " << std::hex << type_matcher << "\n";
  const OPC opc = InsOPC(ins);
  const uint16_t end = kPatternJumper[unsigned(opc) + 1];
  for (unsigned p = kPatternJumper[unsigned(opc)]; p < end; ++p) {
    const Pattern& pat = kPatterns[p];
    if (!PatternMatchesTypeCurbs(pat, type_matcher)) continue;
    const uint8_t mismatches =
        PatternMismatchesImmCurbs(pat, ins, assume_stk_op_matches);
    if (mismatches == 0) return 0;
    const uint8_t num_bits = __builtin_popcount(mismatches);
    if (num_bits < best_num_bits) {
      best = mismatches;
      best_num_bits = num_bits;
    }
  }
  return best;
}

namespace {
int32_t ExtractReg(Reg reg) {
  ASSERT(reg.kind() == RefKind::REG, "not a reg " << unsigned(reg.kind()));
  CpuReg cpu_reg = RegCpuReg(reg);
  ASSERT(!cpu_reg.isnull(), "no cpu reg");
  return CpuRegNo(cpu_reg);
}

int64_t ExtractNumNeg(Const num) { return -ConstValueInt64(num); }

int64_t ExtractNumNot(Const num) { return ~ConstValueInt64(num); }

// TODO: should this return an uint32_t
int32_t GetStackOffset(Handle stk, Handle num) {
  ASSERT(stk.kind() == RefKind::STK, "");
  ASSERT(num.kind() == RefKind::CONST, "");
  return StkSlot(Stk(stk)) + ConstValueInt32(Const(num));
}

int64_t ExtractParamOp(Ins ins, PARAM param, const EmitContext& ctx) {
  switch (param) {
    case PARAM::reg0:
      return ExtractReg(Reg(InsOperand(ins, 0)));
    case PARAM::reg1:
      return ExtractReg(Reg(InsOperand(ins, 1)));
    case PARAM::reg2:
      return ExtractReg(Reg(InsOperand(ins, 2)));
    case PARAM::reg3:
      return ExtractReg(Reg(InsOperand(ins, 3)));
    case PARAM::reg4:
      return ExtractReg(Reg(InsOperand(ins, 4)));
    case PARAM::num0:
      return ConstValueInt64(Const(InsOperand(ins, 0)));
    case PARAM::num1:
      return ConstValueInt64(Const(InsOperand(ins, 1)));
    case PARAM::num2:
      return ConstValueInt64(Const(InsOperand(ins, 2)));
    case PARAM::num3:
      return ConstValueInt64(Const(InsOperand(ins, 3)));
    case PARAM::num4:
      return ConstValueInt64(Const(InsOperand(ins, 4)));
    case PARAM::num0_neg:
      return ExtractNumNeg(Const(InsOperand(ins, 0)));
    case PARAM::num1_neg:
      return ExtractNumNeg(Const(InsOperand(ins, 1)));
    case PARAM::num2_neg:
      return ExtractNumNeg(Const(InsOperand(ins, 2)));
    case PARAM::num3_neg:
      return ExtractNumNeg(Const(InsOperand(ins, 3)));
    case PARAM::num4_neg:
      return ExtractNumNeg(Const(InsOperand(ins, 4)));
    case PARAM::num0_not:
      return ExtractNumNot(Const(InsOperand(ins, 0)));
    case PARAM::num1_not:
      return ExtractNumNot(Const(InsOperand(ins, 1)));
    case PARAM::num2_not:
      return ExtractNumNot(Const(InsOperand(ins, 2)));
    case PARAM::num1_0_16:
      return ConstValueInt64(Const(InsOperand(ins, 1))) & (0xffffULL << 0ULL);
    case PARAM::num1_16_32:
      return ConstValueInt64(Const(InsOperand(ins, 1))) & (0xffffULL << 16ULL);
    case PARAM::num1_32_48:
      return ConstValueInt64(Const(InsOperand(ins, 1))) & (0xffffULL << 32ULL);
    case PARAM::num1_48_64:
      return ConstValueInt64(Const(InsOperand(ins, 1))) & (0xffffULL << 48ULL);
    case PARAM::num2_rsb_width: {
      Const num = Const(InsOperand(ins, 2));
      unsigned width = DKBitWidth(ConstKind(num));
      int64_t val = ConstValueInt64(num);
      ASSERT(1 <= val && val <= width, "");
      return width - val;
    }
    case PARAM::num2_rsb_width_minus1: {
      Const num = Const(InsOperand(ins, 2));
      unsigned width = DKBitWidth(ConstKind(num));
      int64_t val = ConstValueInt64(num);
      ASSERT(1 <= val && val <= width, "");
      return width - val - 1;
    }

    case PARAM::stk0_offset1:
      return GetStackOffset(InsOperand(ins, 0), InsOperand(ins, 1));
    case PARAM::stk0_offset1_lo:
      return GetStackOffset(InsOperand(ins, 0), InsOperand(ins, 1)) & 0xffffU;

    case PARAM::stk0_offset1_hi:
      return (GetStackOffset(InsOperand(ins, 0), InsOperand(ins, 1)) >> 16U) &
             0xffff;
    case PARAM::stk1_offset2:
      return GetStackOffset(InsOperand(ins, 1), InsOperand(ins, 2));

    case PARAM::stk1_offset2_lo:
      return GetStackOffset(InsOperand(ins, 1), InsOperand(ins, 2)) & 0xffffU;

    case PARAM::stk1_offset2_hi:
      return (GetStackOffset(InsOperand(ins, 1), InsOperand(ins, 2)) >> 16U) &
             0xffffU;
    case PARAM::scratch_gpr:
      ASSERT(CpuRegKind(ctx.scratch_cpu_reg) == +CPU_REG_KIND::GPR64,
             "expected gpr64 reg got " << Name(ctx.scratch_cpu_reg));
      return CpuRegNo(ctx.scratch_cpu_reg);
    case PARAM::scratch_flt:
      ASSERT(CpuRegKind(ctx.scratch_cpu_reg) == +CPU_REG_KIND::FLT64,
             "expected flt64 reg got " << Name(ctx.scratch_cpu_reg));
      return CpuRegNo(ctx.scratch_cpu_reg);
    case PARAM::bbl0:
    case PARAM::bbl2:
    case PARAM::fun0:
    case PARAM::mem1_num2_lo12:
    case PARAM::mem1_num2_prel_hi21:
    case PARAM::fun1_lo12:
    case PARAM::fun1_prel_hi21:
    case PARAM::jtb1_lo12:
    case PARAM::jtb1_prel_hi21:
      // relocs, we return 0, as the value is irrelevant. MaybeHandleReloc()
      // does the heavy lifting
      return 0;
    case PARAM::invalid:
      return 0;
  }
  ASSERT(false, "unsupported parmm " << +param << " " << EnumToString(param));
  return 0;
}

void MaybeHandleReloc(a64::Ins* cpuins, unsigned pos, Ins ins, PARAM op) {
  Str symbol;
  auto handle_addend = [&](Const num) {
    cpuins->operands[pos] = ConstValueInt32(num);
  };
  switch (op) {
    case PARAM::bbl0:
      cpuins->reloc_kind = elf::RELOC_TYPE_AARCH64::JUMP26;
      cpuins->is_local_sym = true;
      symbol = Name(Bbl(InsOperand(ins, 0)));
      break;
    case PARAM::bbl2:
      cpuins->reloc_kind = elf::RELOC_TYPE_AARCH64::CONDBR19;
      cpuins->is_local_sym = true;
      symbol = Name(Bbl(InsOperand(ins, 2)));
      break;
    case PARAM::fun0:
      cpuins->reloc_kind = elf::RELOC_TYPE_AARCH64::CALL26;
      symbol = Name(Fun(InsOperand(ins, 0)));
      break;
    case PARAM::mem1_num2_lo12:
      cpuins->reloc_kind = elf::RELOC_TYPE_AARCH64::ADD_ABS_LO12_NC;
      symbol = Name(Mem(InsOperand(ins, 1)));
      handle_addend(Const(InsOperand(ins, 2)));
      break;
    case PARAM::mem1_num2_prel_hi21:
      cpuins->reloc_kind = elf::RELOC_TYPE_AARCH64::ADR_PREL_PG_HI21;
      symbol = Name(Mem(InsOperand(ins, 1)));
      handle_addend(Const(InsOperand(ins, 2)));
      break;
    case PARAM::fun1_lo12:
      cpuins->reloc_kind = elf::RELOC_TYPE_AARCH64::ADD_ABS_LO12_NC;
      symbol = Name(Fun(InsOperand(ins, 1)));
      break;
    case PARAM::fun1_prel_hi21:
      cpuins->reloc_kind = elf::RELOC_TYPE_AARCH64::ADR_PREL_PG_HI21;
      symbol = Name(Fun(InsOperand(ins, 1)));
      break;
    case PARAM::jtb1_lo12:
      cpuins->reloc_kind = elf::RELOC_TYPE_AARCH64::ADD_ABS_LO12_NC;
      cpuins->is_local_sym = true;
      symbol = Name(Jtb(InsOperand(ins, 1)));
      break;
    case PARAM::jtb1_prel_hi21:
      cpuins->reloc_kind = elf::RELOC_TYPE_AARCH64::ADR_PREL_PG_HI21;
      cpuins->is_local_sym = true;
      symbol = Name(Jtb(InsOperand(ins, 1)));
      break;
    default:
      return;
  }
  cpuins->reloc_pos = pos;
  cpuins->reloc_symbol = StrData(symbol);
}

}  // namespace

// number of args == MAX_OPERANDS
a64::Ins MakeIns(a64::OPC opc_enum,
                 int64_t x0,
                 int64_t x1,
                 int64_t x2,
                 int64_t x3,
                 int64_t x4) {
  const a64::Opcode* opc = &a64::OpcodeTable[+opc_enum];
  if (opc->num_fields > 0) x0 = a64::EncodeOperand(opc->fields[0], x0);
  if (opc->num_fields > 1) x1 = a64::EncodeOperand(opc->fields[1], x1);
  if (opc->num_fields > 2) x2 = a64::EncodeOperand(opc->fields[2], x2);
  if (opc->num_fields > 3) x3 = a64::EncodeOperand(opc->fields[3], x3);
  if (opc->num_fields > 4) x4 = a64::EncodeOperand(opc->fields[4], x4);
  return a64::Ins{
      opc,
      {(uint32_t)x0, (uint32_t)x1, (uint32_t)x2, (uint32_t)x3, (uint32_t)x4}};
}
a64::Ins MakeInsFromTmpl(const InsTmpl& tmpl, Ins ins, const EmitContext& ctx) {
  a64::Ins out;
  out.opcode = &a64::OpcodeTable[unsigned(tmpl.opcode)];
  // std::cout << "@@@@@@ OPCODE " << out.opcode->name << "\n";
  for (unsigned o = 0; o < out.opcode->num_fields; ++o) {
    if ((tmpl.template_mask & (1U << o)) == 0) {
      // fixed operand - we uses these verbatim
      out.operands[o] = a64::EncodeOperand(out.opcode->fields[o], tmpl.operands[o]);
    } else {
      // std::cout << "@@Handle " << o << " " <<
      // a64::EnumToString(out.opcode->fields[o]) <<  "\n";
      // parameters require extra processing
      auto param = PARAM(tmpl.operands[o]);
      out.operands[o] = a64::EncodeOperand(out.opcode->fields[o],
                                           ExtractParamOp(ins, param, ctx));
      // Note: this may overwrite    out.operands[o]
      MaybeHandleReloc(&out, o, ins, param);
    }
  }
  return out;
}

class RegBitVec {
 public:
  RegBitVec(uint32_t reg_bits) : reg_bits_(reg_bits), pos_(31) {}

  bool empty() const { return reg_bits_ == 0; }

  uint32_t next_reg_no() {
    while (((1U << pos_) & reg_bits_) == 0) --pos_;
    reg_bits_ &= ~(1U << pos_);
    --pos_;
    return pos_ + 1;
  }

 private:
  uint32_t reg_bits_;
  uint32_t pos_;
};

void EmitFunProlog(const EmitContext& ctx, std::vector<a64::Ins>* output) {
  RegBitVec gpr_regs(ctx.gpr_reg_mask);
  if (!gpr_regs.empty()) {
    while (!gpr_regs.empty()) {
      uint32_t r1 = gpr_regs.next_reg_no();
      if (gpr_regs.empty()) {
        output->push_back(
            MakeIns(a64::OPC::str_x_imm_pre, +FIXARG::WZR, -16, r1));
        break;
      }
      uint32_t r2 = gpr_regs.next_reg_no();
      output->push_back(
          MakeIns(a64::OPC::stp_x_imm_pre, +FIXARG::WZR, -16, r2, r1));
    }
  }

  RegBitVec flt_regs(ctx.flt_reg_mask);
  if (!flt_regs.empty()) {
    while (!flt_regs.empty()) {
      uint32_t r1 = flt_regs.next_reg_no();
      if (flt_regs.empty()) {
        output->push_back(
            MakeIns(a64::OPC::fstr_d_imm_pre, +FIXARG::WZR, -16, r1));
        break;
      }
      uint32_t r2 = flt_regs.next_reg_no();
      output->push_back(
          MakeIns(a64::OPC::fstp_d_imm_pre, +FIXARG::WZR, -16, r2, r1));
    }
  }
  uint32_t stk_size = ctx.stk_size;
  ASSERT((stk_size >> 24U) == 0, "stack too large");
  if ((stk_size & 0xfff000U) != 0) {
    output->push_back(MakeIns(a64::OPC::sub_x_imm, +FIXARG::WZR, +FIXARG::WZR,
                              stk_size & 0xfff000U));
  }

  if ((stk_size & 0xfffU) != 0) {
    output->push_back(MakeIns(a64::OPC::sub_x_imm, +FIXARG::WZR, +FIXARG::WZR,
                              stk_size & 0xfffU));
  }
}

void EmitFunEpilog(const EmitContext& ctx, std::vector<a64::Ins>* output) {
  const size_t start = output->size();
  // we will revert everything at the end
  output->push_back(MakeIns(a64::OPC::ret, +FIXARG::LR));

  RegBitVec gpr_regs(ctx.gpr_reg_mask);
  if (!gpr_regs.empty()) {
    while (!gpr_regs.empty()) {
      uint32_t r1 = gpr_regs.next_reg_no();
      if (gpr_regs.empty()) {
        output->push_back(
            MakeIns(a64::OPC::ldr_x_imm_post, r1, +FIXARG::WZR, 16));
        break;
      }
      uint32_t r2 = gpr_regs.next_reg_no();
      output->push_back(
          MakeIns(a64::OPC::ldp_x_imm_post, r2, r1, +FIXARG::WZR, 16));
    }
  }

  RegBitVec flt_regs(ctx.flt_reg_mask);
  if (!flt_regs.empty()) {
    while (!flt_regs.empty()) {
      uint32_t r1 = flt_regs.next_reg_no();
      if (flt_regs.empty()) {
        output->push_back(
            MakeIns(a64::OPC::fldr_d_imm_post, r1, +FIXARG::WZR, 16));
        break;
      }
      uint32_t r2 = flt_regs.next_reg_no();
      output->push_back(
          MakeIns(a64::OPC::fldp_d_imm_post, r2, r1, +FIXARG::WZR, 16));
    }
  }
  uint32_t stk_size = ctx.stk_size;
  ASSERT((stk_size >> 24U) == 0, "stack too large");
  if ((stk_size & 0xfffU) != 0) {
    output->push_back(MakeIns(a64::OPC::add_x_imm, +FIXARG::WZR, +FIXARG::WZR,
                              stk_size & 0xfffU));
  }

  if ((stk_size & 0xfff000U) != 0) {
    output->push_back(MakeIns(a64::OPC::add_x_imm, +FIXARG::WZR, +FIXARG::WZR,
                              stk_size & 0xfff000U));
  }
  std::reverse(output->begin() + start, output->end());
}

}  // namespace cwerg::code_gen_a64
