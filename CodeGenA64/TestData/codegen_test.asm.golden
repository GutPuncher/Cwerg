
INS: conv $r0_U32@w10 $r0_U8@w10  [U32 U8]
PAT: reg:[U32 U8]  imm:[INVALID INVALID]
    and_x_imm x10 x10 0xff

INS: mov $r0_S32@w11 -100  [S32 S32]
PAT: reg:[S32 S32]  imm:[INVALID IMM_SHIFTED_5_20_21_22_NOT]
    movn_x_imm x11 0x63

INS: mov $r0_U32@w10 525032  [U32 U32]
PAT: reg:[U32 U32]  imm:[INVALID IMM_POS_32]
    movz_x_imm x10 0x2e8
    movk_x_imm x10 0x8 16

INS: mov addr@x20 1311768467284833366  [A64 A64]
PAT: reg:[A64 A64]  imm:[INVALID ANY]
    movz_x_imm x20 0x3456
    movk_x_imm x20 0x9012 16
    movk_x_imm x20 0x5678 32
    movk_x_imm x20 0x1234 48

INS: lea.stk addr@x20 buffer 0  [A64 _ U32]
PAT: reg:[A64 INVALID U32]  imm:[INVALID INVALID pos_stk_combo_shifted_10_21_22]
    add_x_imm x20 sp 0x0

INS: lea.mem addr@x20 COUNTER 100  [A64 _ S32]
PAT: reg:[A64 INVALID S32]  imm:[INVALID INVALID ANY]
    adrp x20 expr:adr_prel_pg_hi21:COUNTER:100
    add_x_imm x20 x20 expr:add_abs_lo12_nc:COUNTER:100

INS: lea.mem addr@x20 COUNTER $r0_U32@w10  [A64 _ U32]
    MATCH_IMPOSSIBLE

INS: mov $r1_U32@w11 $r0_U32@w10  [U32 U32]
PAT: reg:[U32 U32]  imm:[INVALID INVALID]
    orr_x_reg x11 xzr x10 lsl 0

INS: mov $r0_U32@w10 10  [U32 U32]
PAT: reg:[U32 U32]  imm:[INVALID IMM_SHIFTED_5_20_21_22]
    movz_x_imm x10 0xa

INS: div rem@w5 $r1_U32@w11 $r0_U32@w10  [U32 U32 U32]
PAT: reg:[U32 U32 U32]  imm:[INVALID INVALID INVALID]
    udiv_w w5 w11 w10

INS: mov $r0_U32@w10 10  [U32 U32]
PAT: reg:[U32 U32]  imm:[INVALID IMM_SHIFTED_5_20_21_22]
    movz_x_imm x10 0xa

INS: mul rem@w5 rem@w5 $r0_U32@w10  [U32 U32 U32]
PAT: reg:[U32 U32 U32]  imm:[INVALID INVALID INVALID]
    madd_w w5 w5 w10 wzr

INS: sub rem@w5 $r1_U32@w11 rem@w5  [U32 U32 U32]
PAT: reg:[U32 U32 U32]  imm:[INVALID INVALID INVALID]
    sub_w_reg w5 w11 w5 lsl 0

INS: mov $r0_U32@w10 10  [U32 U32]
PAT: reg:[U32 U32]  imm:[INVALID IMM_SHIFTED_5_20_21_22]
    movz_x_imm x10 0xa

INS: bne $r0_U32@w10 148932 skip  [U32 U32 _]
    mismatches: 2

INS: mov $r0_U32@w10 148932  [U32 U32]
PAT: reg:[U32 U32]  imm:[INVALID IMM_POS_32]
    movz_x_imm x10 0x45c4
    movk_x_imm x10 0x2 16

INS: div div@w6 $r1_U32@w11 $r0_U32@w10  [U32 U32 U32]
PAT: reg:[U32 U32 U32]  imm:[INVALID INVALID INVALID]
    udiv_w w6 w11 w10

INS: beq div@w6 0 skip  [U32 U32 _]
PAT: reg:[U32 U32 INVALID]  imm:[INVALID IMM_SHIFTED_10_21_22 INVALID]
    subs_w_imm wzr w6 0x0
    b_eq expr:condbr19:skip

INS: poparg base@x22  [A64]
    MATCH_IMPOSSIBLE

INS: ld add@x23 base@x22 0  [A64 A64 U32]
PAT: reg:[A64 A64 U32]  imm:[INVALID INVALID ZERO]
    ldr_x_imm x23 x22 0

INS: ret  []
    SPECIAL

INS: copysign flt@s1 flt@s1 0.0  [F32 F32 F32]
PAT: reg:[F32 F32 F32]  imm:[INVALID INVALID ZERO]
    fabs_s s1 s1

INS: copysign dbl@d2 dbl@d2 0.0  [F64 F64 F64]
PAT: reg:[F64 F64 F64]  imm:[INVALID INVALID ZERO]
    fabs_d d2 d2

INS: beq dbl@d2 0.0 skip  [F64 F64 _]
PAT: reg:[F64 F64 INVALID]  imm:[INVALID ZERO INVALID]
    fcmpe_d_zero d2 0
    b_eq expr:condbr19:skip

INS: copysign flt@s1 flt@s1 flt@s1  [F32 F32 F32]
PAT: reg:[F32 F32 F32]  imm:[INVALID INVALID INVALID]
    fmov_w_from_s w8 s1
    fabs_s s1 s1
    tbz x8 31 0
    fneg_s s1 s1

INS: copysign dbl@d2 dbl@d2 dbl@d2  [F64 F64 F64]
PAT: reg:[F64 F64 F64]  imm:[INVALID INVALID INVALID]
    fmov_x_from_d x8 d2
    fabs_d d2 d2
    tbz x8 63 0
    fneg_d d2 d2

INS: ret  []
    SPECIAL
