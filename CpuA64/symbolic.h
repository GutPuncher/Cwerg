#pragma once
// (c) Robert Muth - see LICENSE for more info
// NOTE: this file is PARTIALLY autogenerated via: ./opcode_tab.py gen_h

#include "CpuA64/opcode_gen.h"
#include "Elf/enum_gen.h"  // for reloc types

#include <cstdint>
#include <string_view>
#include <vector>

namespace cwerg::a64 {
using namespace cwerg;

extern std::string_view InsSymbolize(const a64::Ins& ins,
                                     std::vector<std::string>* operands);

extern int32_t SignedIntFromBits(uint32_t data, unsigned n_bits);

const uint32_t kEncodeFailure = 0xffffffff;

// may return kEncodeFailure
extern uint32_t Encode8BitFlt(double val);
extern double Decode8BitFlt(uint32_t x);

// may return kEncodeFailure
extern uint32_t Encode_10_15_16_22_X(uint64_t val);
extern uint32_t Encode_10_15_16_22_W(uint64_t val);
extern uint64_t Decode_10_15_16_22(uint32_t x, uint32_t reg_size);

}  // namespace cwerg::a64
